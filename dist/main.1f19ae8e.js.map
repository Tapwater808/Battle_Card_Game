{"version":3,"sources":["../src/math.ts","../src/utils.ts","../src/gfx.ts","../src/app.ts","../src/audio.ts","../src/assets.ts","../src/logger.ts","../src/net.ts","../src/kaboom.ts","kaboom.js","scenes/Game.js","main.js","../node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["k","width","height","scale","clearColor","HelloWorld","score","scoreText","add","pos","text","color","scene","start","OVERLAY_ID","OldModule","module","bundle","Module","moduleName","call","hot","data","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","push","dispose","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","event","JSON","parse","type","handled","assets","forEach","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","id","every","generated","js","console","clear","hmrApply","v","hmrAcceptRun","reload","close","onclose","log","removeErrorOverlay","error","message","stack","overlay","createErrorOverlay","document","body","appendChild","getElementById","remove","createElement","stackTrace","innerText","innerHTML","getParents","modules","parents","d","dep","Array","isArray","length","concat","Function","deps","cached","cache","some","cb"],"mappings":"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","file":"main.1f19ae8e.js","sourceRoot":"../src","sourcesContent":["function deg2rad(deg: number): number {\n\treturn deg * Math.PI / 180;\n}\n\nfunction rad2deg(rad: number): number {\n\treturn rad * 180 / Math.PI;\n}\n\nfunction clamp(\n\tval: number,\n\tmin: number,\n\tmax: number,\n): number {\n\tif (min > max) {\n\t\treturn clamp(val, max, min);\n\t}\n\treturn Math.min(Math.max(val, min), max);\n}\n\nfunction lerp(\n\ta: number,\n\tb: number,\n\tt: number,\n): number {\n\treturn a + (b - a) * t;\n}\n\nfunction map(\n\tv: number,\n\tl1: number,\n\th1: number,\n\tl2: number,\n\th2: number,\n): number {\n\treturn l2 + (v - l1) / (h1 - l1) * (h2 - l2);\n}\n\nfunction mapc(\n\tv: number,\n\tl1: number,\n\th1: number,\n\tl2: number,\n\th2: number,\n): number {\n\treturn clamp(map(v, l1, h1, l2, h2), l2, h2);\n}\n\nfunction vec2(...args): Vec2 {\n\n\tif (args.length === 0) {\n\t\treturn vec2(0, 0);\n\t}\n\n\tif (args.length === 1) {\n\t\tif (typeof args[0] === \"number\") {\n\t\t\treturn vec2(args[0], args[0]);\n\t\t} else if (isVec2(args[0])) {\n\t\t\treturn vec2(args[0].x, args[0].y);\n\t\t} else if (Array.isArray(args[0]) && args[0].length === 2) {\n\t\t\treturn vec2.apply(null, args[0]);\n\t\t}\n\t}\n\n\treturn {\n\t\tx: args[0],\n\t\ty: args[1],\n\t\tclone() {\n\t\t\treturn vec2(this.x, this.y);\n\t\t},\n\t\tadd(...args) {\n\t\t\tconst p2 = vec2(...args);\n\t\t\treturn vec2(this.x + p2.x, this.y + p2.y);\n\t\t},\n\t\tsub(...args) {\n\t\t\tconst p2 = vec2(...args);\n\t\t\treturn vec2(this.x - p2.x, this.y - p2.y);\n\t\t},\n\t\tscale(s) {\n\t\t\treturn vec2(this.x * s, this.y * s);\n\t\t},\n\t\tdist(...args) {\n\t\t\tconst p2 = vec2(...args);\n\t\t\treturn Math.sqrt(\n\t\t\t\t(this.x - p2.x) * (this.x - p2.x)\n\t\t\t\t+ (this.y - p2.y) * (this.y - p2.y)\n\t\t\t);\n\t\t},\n\t\tlen() {\n\t\t\treturn this.dist(vec2(0, 0));\n\t\t},\n\t\tunit() {\n\t\t\treturn this.scale(1 / this.len());\n\t\t},\n\t\tnormal() {\n\t\t\treturn vec2(this.y, -this.x);\n\t\t},\n\t\tdot(...args) {\n\t\t\tconst p2 = vec2(...args);\n\t\t\treturn vec2(this.x * p2.x, this.y * p2.y);\n\t\t},\n\t\tangle(...args) {\n\t\t\tconst p2 = vec2(...args);\n\t\t\treturn Math.atan2(this.y - p2.y, this.x - p2.x);\n\t\t},\n\t\tlerp(p2, t) {\n\t\t\treturn vec2(lerp(this.x, p2.x, t), lerp(this.y, p2.y, t));\n\t\t},\n\t\teq(other) {\n\t\t\treturn this.x === other.x && this.y === other.y;\n\t\t},\n\t\tstr() {\n\t\t\treturn `(${this.x}, ${this.y})`;\n\t\t},\n\t};\n}\n\nfunction vec2FromAngle(a: number): Vec2 {\n\treturn vec2(Math.cos(a), Math.sin(a));\n}\n\nfunction vec3(x: number, y: number, z: number): Vec3 {\n\treturn {\n\t\tx: x,\n\t\ty: y,\n\t\tz: z,\n\t\txy() {\n\t\t\treturn vec2(this.x, this.y);\n\t\t},\n\t};\n}\n\nfunction isVec2(p: any): boolean {\n\treturn p !== undefined\n\t\t&& p.x !== undefined\n\t\t&& p.y !== undefined\n\t\t;\n}\n\nfunction isVec3(p: any): boolean {\n\treturn p !== undefined\n\t\t&& p.x !== undefined\n\t\t&& p.y !== undefined\n\t\t&& p.z !== undefined\n\t\t;\n}\n\nfunction isColor(c: any): boolean {\n\treturn c !== undefined\n\t\t&& c.r !== undefined\n\t\t&& c.g !== undefined\n\t\t&& c.b !== undefined\n\t\t&& c.a !== undefined\n\t\t;\n}\n\nfunction isMat4(m: any): Mat4 {\n\tif (\n\t\tm !== undefined\n\t\t&& Array.isArray(m.m)\n\t\t&& m.m.length === 16\n\t) {\n\t\treturn m;\n\t}\n}\n\nfunction rgb(...args): Color {\n\tif (args.length === 0) {\n\t\treturn rgba();\n\t} else if (args.length === 1) {\n\t\tif (isColor(args[0])) {\n\t\t\treturn rgba(args[0]);\n\t\t} else if (Array.isArray(args[0]) && args[0].length === 3) {\n\t\t\treturn rgb.apply(null, args[0])\n\t\t}\n\t}\n\treturn rgba(args[0], args[1], args[2], 1);\n}\n\nfunction rgba(...args): Color {\n\n\tif (args.length === 0) {\n\t\treturn rgba(1, 1, 1, 1);\n\t} else if (args.length === 1) {\n\t\tif (isColor(args[0])) {\n\t\t\treturn rgba(args[0].r, args[0].g, args[0].b, args[0].a);\n\t\t} else if (Array.isArray(args[0]) && args[0].length === 4) {\n\t\t\treturn rgba.apply(null, args[0]);\n\t\t}\n\t}\n\n\treturn {\n\t\tr: args[0],\n\t\tg: args[1],\n\t\tb: args[2],\n\t\ta: args[3] ?? 1,\n\t\tclone(): Color {\n\t\t\treturn rgba(this.r, this.g, this.b, this.a);\n\t\t},\n\t\tlighten(a): Color {\n\t\t\treturn rgba(this.r + a, this.g + a, this.b + a, this.a);\n\t\t},\n\t\tdarken(a: number): Color {\n\t\t\treturn this.lighten(-a);\n\t\t},\n\t\tinvert(): Color {\n\t\t\treturn rgba(1 - this.r, 1 - this.g, 1 - this.b, this.a);\n\t\t},\n\t\tisDark(p: number = 0.5): boolean {\n\t\t\treturn this.r + this.g + this.b < 3 * p;\n\t\t},\n\t\tisLight(p: number = 0.5): boolean {\n\t\t\treturn this.r + this.g + this.b > 3 * p;\n\t\t},\n\t\teq(other: Color): boolean {\n\t\t\treturn this.r === other.r\n\t\t\t\t&& this.g === other.g\n\t\t\t\t&& this.b === other.g\n\t\t\t\t&& this.a === other.a;\n\t\t},\n\t};\n\n}\n\nfunction quad(x: number, y: number, w: number, h: number): Quad {\n\treturn {\n\t\tx: x,\n\t\ty: y,\n\t\tw: w,\n\t\th: h,\n\t\tclone() {\n\t\t\treturn quad(this.x, this.y, this.w, this.h);\n\t\t},\n\t\teq(other) {\n\t\t\treturn this.x === other.x\n\t\t\t\t&& this.y === other.y\n\t\t\t\t&& this.w === other.w\n\t\t\t\t&& this.h === other.h;\n\t\t},\n\t};\n}\n\nfunction mat4(m?: number[]): Mat4 {\n\n\treturn {\n\n\t\tm: m ? [...m] : [\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1,\n\t\t],\n\n\t\tclone(): Mat4 {\n\t\t\treturn mat4(this.m);\n\t\t},\n\n\t\tmult(other: Mat4): Mat4 {\n\n\t\t\tconst out = [];\n\n\t\t\tfor (let i = 0; i < 4; i++) {\n\t\t\t\tfor (let j = 0; j < 4; j++) {\n\t\t\t\t\tout[i * 4 + j] =\n\t\t\t\t\t\tthis.m[0 * 4 + j] * other.m[i * 4 + 0] +\n\t\t\t\t\t\tthis.m[1 * 4 + j] * other.m[i * 4 + 1] +\n\t\t\t\t\t\tthis.m[2 * 4 + j] * other.m[i * 4 + 2] +\n\t\t\t\t\t\tthis.m[3 * 4 + j] * other.m[i * 4 + 3];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn mat4(out);\n\n\t\t},\n\n\t\tmultVec4(p: Vec4): Vec4 {\n\t\t\treturn {\n\t\t\t\tx: p.x * this.m[0] + p.y * this.m[4] + p.z * this.m[8] + p.w * this.m[12],\n\t\t\t\ty: p.x * this.m[1] + p.y * this.m[5] + p.z * this.m[9] + p.w * this.m[13],\n\t\t\t\tz: p.x * this.m[2] + p.y * this.m[6] + p.z * this.m[10] + p.w * this.m[14],\n\t\t\t\tw: p.x * this.m[3] + p.y * this.m[7] + p.z * this.m[11] + p.w * this.m[15]\n\t\t\t};\n\t\t},\n\n\t\tmultVec3(p: Vec3): Vec3 {\n\t\t\tconst p4 = this.multVec4({\n\t\t\t\tx: p.x,\n\t\t\t\ty: p.y,\n\t\t\t\tz: p.z,\n\t\t\t\tw: 1.0,\n\t\t\t});\n\t\t\treturn vec3(p4.x, p4.y, p4.z);\n\t\t},\n\n\t\tmultVec2(p: Vec2): Vec2 {\n\t\t\treturn vec2(\n\t\t\t\tp.x * this.m[0] + p.y * this.m[4] + 0 * this.m[8] + 1 * this.m[12],\n\t\t\t\tp.x * this.m[1] + p.y * this.m[5] + 0 * this.m[9] + 1 * this.m[13],\n\t\t\t);\n\t\t},\n\n\t\ttranslate(p: Vec2) {\n\t\t\treturn this.mult(mat4([\n\t\t\t\t1, 0, 0, 0,\n\t\t\t\t0, 1, 0, 0,\n\t\t\t\t0, 0, 1, 0,\n\t\t\t\tp.x, p.y, 0, 1,\n\t\t\t]));\n\t\t},\n\n\t\tscale(s: Vec2) {\n\t\t\treturn this.mult(mat4([\n\t\t\t\ts.x, 0, 0, 0,\n\t\t\t\t0, s.y, 0, 0,\n\t\t\t\t0, 0, 1, 0,\n\t\t\t\t0, 0, 0, 1,\n\t\t\t]));\n\t\t},\n\n\t\trotateX(a: number) {\n\t\t\treturn this.mult(mat4([\n\t\t\t\t1, 0, 0, 0,\n\t\t\t\t0, Math.cos(a), -Math.sin(a), 0,\n\t\t\t\t0, Math.sin(a), Math.cos(a), 0,\n\t\t\t\t0, 0, 0, 1,\n\t\t\t]));\n\t\t},\n\n\t\trotateY(a: number) {\n\t\t\treturn this.mult(mat4([\n\t\t\t\tMath.cos(a), 0, -Math.sin(a), 0,\n\t\t\t\t0, 1, 0, 0,\n\t\t\t\tMath.sin(a), 0, Math.cos(a), 0,\n\t\t\t\t0, 0, 0, 1,\n\t\t\t]));\n\t\t},\n\n\t\trotateZ(a: number) {\n\t\t\treturn this.mult(mat4([\n\t\t\t\tMath.cos(a), -Math.sin(a), 0, 0,\n\t\t\t\tMath.sin(a), Math.cos(a), 0, 0,\n\t\t\t\t0, 0, 1, 0,\n\t\t\t\t0, 0, 0, 1,\n\t\t\t]));\n\t\t},\n\n\t\tinvert(): Mat4 {\n\n\t\t\tconst out = [];\n\n\t\t\tconst f00 = this.m[10] * this.m[15] - this.m[14] * this.m[11];\n\t\t\tconst f01 = this.m[9] * this.m[15] - this.m[13] * this.m[11];\n\t\t\tconst f02 = this.m[9] * this.m[14] - this.m[13] * this.m[10];\n\t\t\tconst f03 = this.m[8] * this.m[15] - this.m[12] * this.m[11];\n\t\t\tconst f04 = this.m[8] * this.m[14] - this.m[12] * this.m[10];\n\t\t\tconst f05 = this.m[8] * this.m[13] - this.m[12] * this.m[9];\n\t\t\tconst f06 = this.m[6] * this.m[15] - this.m[14] * this.m[7];\n\t\t\tconst f07 = this.m[5] * this.m[15] - this.m[13] * this.m[7];\n\t\t\tconst f08 = this.m[5] * this.m[14] - this.m[13] * this.m[6];\n\t\t\tconst f09 = this.m[4] * this.m[15] - this.m[12] * this.m[7];\n\t\t\tconst f10 = this.m[4] * this.m[14] - this.m[12] * this.m[6];\n\t\t\tconst f11 = this.m[5] * this.m[15] - this.m[13] * this.m[7];\n\t\t\tconst f12 = this.m[4] * this.m[13] - this.m[12] * this.m[5];\n\t\t\tconst f13 = this.m[6] * this.m[11] - this.m[10] * this.m[7];\n\t\t\tconst f14 = this.m[5] * this.m[11] - this.m[9] * this.m[7];\n\t\t\tconst f15 = this.m[5] * this.m[10] - this.m[9] * this.m[6];\n\t\t\tconst f16 = this.m[4] * this.m[11] - this.m[8] * this.m[7];\n\t\t\tconst f17 = this.m[4] * this.m[10] - this.m[8] * this.m[6];\n\t\t\tconst f18 = this.m[4] * this.m[9] - this.m[8] * this.m[5];\n\n\t\t\tout[0] = this.m[5] * f00 - this.m[6] * f01 + this.m[7] * f02;\n\t\t\tout[4] = -(this.m[4] * f00 - this.m[6] * f03 + this.m[7] * f04);\n\t\t\tout[8] = this.m[4] * f01 - this.m[5] * f03 + this.m[7] * f05;\n\t\t\tout[12] = -(this.m[4] * f02 - this.m[5] * f04 + this.m[6] * f05);\n\n\t\t\tout[1] = -(this.m[1] * f00 - this.m[2] * f01 + this.m[3] * f02);\n\t\t\tout[5] = this.m[0] * f00 - this.m[2] * f03 + this.m[3] * f04;\n\t\t\tout[9] = -(this.m[0] * f01 - this.m[1] * f03 + this.m[3] * f05);\n\t\t\tout[13] = this.m[0] * f02 - this.m[1] * f04 + this.m[2] * f05;\n\n\t\t\tout[2] = this.m[1] * f06 - this.m[2] * f07 + this.m[3] * f08;\n\t\t\tout[6] = -(this.m[0] * f06 - this.m[2] * f09 + this.m[3] * f10);\n\t\t\tout[10] = this.m[0] * f11 - this.m[1] * f09 + this.m[3] * f12;\n\t\t\tout[14] = -(this.m[0] * f08 - this.m[1] * f10 + this.m[2] * f12);\n\n\t\t\tout[3] = -(this.m[1] * f13 - this.m[2] * f14 + this.m[3] * f15);\n\t\t\tout[7] = this.m[0] * f13 - this.m[2] * f16 + this.m[3] * f17;\n\t\t\tout[11] = -(this.m[0] * f14 - this.m[1] * f16 + this.m[3] * f18);\n\t\t\tout[15] = this.m[0] * f15 - this.m[1] * f17 + this.m[2] * f18;\n\n\t\t\tconst det =\n\t\t\t\tthis.m[0] * out[0] +\n\t\t\t\tthis.m[1] * out[4] +\n\t\t\t\tthis.m[2] * out[8] +\n\t\t\t\tthis.m[3] * out[12];\n\n\t\t\tfor (let i = 0; i < 4; i++) {\n\t\t\t\tfor (let j = 0; j < 4; j++) {\n\t\t\t\t\tout[i * 4 + j] *= (1.0 / det);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn mat4(out);\n\n\t\t},\n\n\t};\n\n}\n\n// easy sine wave\nfunction wave(lo: number, hi: number, t: number): number {\n\treturn lo + (Math.sin(t) + 1) / 2 * (hi - lo);\n}\n\n// basic ANSI C LCG\nconst A = 1103515245;\nconst C = 12345;\nconst M = 2147483648;\nconst defRNG = makeRng(Date.now());\n\nfunction makeRng(seed: number): RNG {\n\treturn {\n\t\tseed: seed,\n\t\tgen(...args) {\n\t\t\tif (args.length === 0) {\n\t\t\t\t// generate 0 - 1\n\t\t\t\tthis.seed = (A * this.seed + C) % M;\n\t\t\t\treturn this.seed / M;\n\t\t\t} else if (args.length === 1) {\n\t\t\t\tif (typeof args[0] === \"number\") {\n\t\t\t\t\treturn this.gen(0, args[0]);\n\t\t\t\t} else if (isVec2(args[0])) {\n\t\t\t\t\treturn this.gen(vec2(0, 0), args[0]);\n\t\t\t\t} else if (isColor(args[0])) {\n\t\t\t\t\treturn this.gen(rgba(0, 0, 0, 0), args[0]);\n\t\t\t\t}\n\t\t\t} else if (args.length === 2) {\n\t\t\t\tif (typeof args[0] === \"number\" && typeof args[1] === \"number\") {\n\t\t\t\t\treturn this.gen() * (args[1] - args[0]) + args[0];\n\t\t\t\t} else if (isVec2(args[0]) && isVec2(args[1])) {\n\t\t\t\t\treturn vec2(\n\t\t\t\t\t\tthis.gen(args[0].x, args[1].x),\n\t\t\t\t\t\tthis.gen(args[0].y, args[1].y),\n\t\t\t\t\t);\n\t\t\t\t} else if (isColor(args[0]) && isColor(args[1])) {\n\t\t\t\t\treturn rgba(\n\t\t\t\t\t\tthis.gen(args[0].r, args[1].r),\n\t\t\t\t\t\tthis.gen(args[0].g, args[1].g),\n\t\t\t\t\t\tthis.gen(args[0].b, args[1].b),\n\t\t\t\t\t\tthis.gen(args[0].a, args[1].a),\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t};\n}\n\nfunction randSeed(seed: number) {\n\tdefRNG.seed = seed;\n}\n\nfunction rand(...args) {\n\t// @ts-ignore\n\treturn defRNG.gen(...args);\n}\n\nfunction chance(p: number): boolean {\n\treturn rand() <= p;\n}\n\nfunction choose<T>(list: T[]): T {\n\treturn list[Math.floor(rand(list.length))];\n}\n\nfunction colRectRect(r1: Rect, r2: Rect): boolean {\n\treturn r1.p2.x >= r2.p1.x\n\t\t&& r1.p1.x <= r2.p2.x\n\t\t&& r1.p2.y >= r2.p1.y\n\t\t&& r1.p1.y <= r2.p2.y;\n}\n\nfunction overlapRectRect(r1: Rect, r2: Rect): boolean {\n\treturn r1.p2.x > r2.p1.x\n\t\t&& r1.p1.x < r2.p2.x\n\t\t&& r1.p2.y > r2.p1.y\n\t\t&& r1.p1.y < r2.p2.y;\n}\n\nfunction colLineLine(l1: Line, l2: Line): boolean {\n\tconst a =\n\t\t(\n\t\t\t(l2.p2.x - l2.p1.x)\n\t\t\t* (l1.p1.y - l2.p1.y)\n\t\t\t- (l2.p2.y - l2.p1.y)\n\t\t\t* (l1.p1.x - l2.p1.x)\n\t\t)\n\t\t/\n\t\t(\n\t\t\t(l2.p2.y - l2.p1.y)\n\t\t\t* (l1.p2.x - l1.p1.x)\n\t\t\t- (l2.p2.x - l2.p1.x)\n\t\t\t* (l1.p2.y - l1.p1.y)\n\t\t);\n\tconst b =\n\t\t(\n\t\t\t(l1.p2.x - l1.p1.x)\n\t\t\t* (l1.p1.y - l2.p1.y)\n\t\t\t- (l1.p2.y - l1.p1.y)\n\t\t\t* (l1.p1.x - l2.p1.x)\n\t\t)\n\t\t/\n\t\t(\n\t\t\t(l2.p2.y - l2.p1.y)\n\t\t\t* (l1.p2.x - l1.p1.x)\n\t\t\t- (l2.p2.x - l2.p1.x)\n\t\t\t* (l1.p2.y - l1.p1.y)\n\t\t);\n\treturn a >= 0.0 && a <= 1.0 && b >= 0.0 && b <= 1.0;\n}\n\nfunction colRectLine(r: Rect, l: Line): boolean {\n\tif (colRectPt(r, l.p1) || colRectPt(r, l.p2)) {\n\t\treturn true;\n\t}\n\treturn colLineLine(l, makeLine(r.p1, vec2(r.p2.x, r.p1.y)))\n\t\t|| colLineLine(l, makeLine(vec2(r.p2.x, r.p1.y), r.p2))\n\t\t|| colLineLine(l, makeLine(r.p2, vec2(r.p1.x, r.p2.y)))\n\t\t|| colLineLine(l, makeLine(vec2(r.p1.x, r.p2.y), r.p1));\n}\n\nfunction colRectPt(r: Rect, pt: Vec2): boolean {\n\treturn pt.x >= r.p1.x && pt.x <= r.p2.x && pt.y >= r.p1.y && pt.y < r.p2.y;\n}\n\nfunction makeLine(p1: Vec2, p2: Vec2): Line {\n\treturn {\n\t\tp1: p1.clone(),\n\t\tp2: p2.clone(),\n\t};\n}\n\nexport {\n\tvec2,\n\tvec3,\n\tmat4,\n\tquad,\n\trgba,\n\trgb,\n\tmakeRng,\n\trand,\n\trandSeed,\n\tchance,\n\tchoose,\n\tclamp,\n\tlerp,\n\tmap,\n\tmapc,\n\twave,\n\tdeg2rad,\n\trad2deg,\n\tcolRectRect,\n\toverlapRectRect,\n\tcolLineLine,\n\tcolRectLine,\n\tcolRectPt,\n\tvec2FromAngle,\n\tisVec2,\n\tisVec3,\n\tisColor,\n\tisMat4,\n};\n","function deepEq(o1: any, o2: any): boolean {\n\tconst t1 = typeof o1;\n\tconst t2 = typeof o2;\n\tif (t1 !== t2) {\n\t\treturn false;\n\t}\n\tif (t1 === \"object\" && t2 === \"object\") {\n\t\tconst k1 = Object.keys(o1);\n\t\tconst k2 = Object.keys(o2);\n\t\tif (k1.length !== k2.length) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (const k of k1) {\n\t\t\tconst v1 = o1[k];\n\t\t\tconst v2 = o2[k];\n\t\t\tif (!(typeof v1 === \"function\" && typeof v2 === \"function\")) {\n\t\t\t\tif (!deepEq(v1, v2)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\treturn o1 === o2;\n}\n\nexport {\n\tdeepEq,\n};\n","import {\n\tvec2,\n\tvec3,\n\tquad,\n\trgba,\n\tmat4,\n\tisVec2,\n\tisVec3,\n\tisColor,\n\tisMat4,\n} from \"./math\";\n\nimport {\n\tdeepEq,\n} from \"./utils\";\n\ntype GfxCtx = {\n\tvbuf: WebGLBuffer,\n\tibuf: WebGLBuffer,\n\tvqueue: number[],\n\tiqueue: number[],\n\tclearColor: Color,\n\tdefProg: GfxProgram,\n\tcurProg: GfxProgram,\n\tdefTex: GfxTexture,\n\tcurTex: GfxTexture,\n\tbgTex: GfxTexture,\n\tcurUniform: Uniform,\n\ttransform: Mat4,\n\ttransformStack: Mat4[],\n\tdrawCalls: number,\n\tlastDrawCalls: number,\n};\n\ntype GfxConf = {\n\tclearColor?: Color,\n\tscale?: number,\n\ttexFilter?: TexFilter,\n};\n\ntype Gfx = {\n\twidth(): number,\n\theight(): number,\n\tscale(): number,\n\tclearColor(): Color,\n\tmakeTex(data: GfxTextureData): GfxTexture,\n\tmakeProgram(vert: string, frag: string): GfxProgram,\n\tmakeFont(\n\t\ttex: GfxTexture,\n\t\tgw: number,\n\t\tgh: number,\n\t\tchars: string,\n\t): GfxFont,\n\tdrawTexture(\n\t\ttex: GfxTexture,\n\t\tconf?: DrawTextureConf,\n\t): void,\n\tdrawText(\n\t\ttxt: string,\n\t\tfont: GfxFont,\n\t\tconf?: DrawTextConf,\n\t): void,\n\tdrawFmtText(ftext: FormattedText): void,\n\tfmtText(\n\t\ttxt: string,\n\t\tfont: GfxFont,\n\t\tconf?: DrawTextConf,\n\t): FormattedText,\n\tdrawRect(\n\t\tpos: Vec2,\n\t\tw: number,\n\t\th: number,\n\t\tconf?: DrawRectConf,\n\t): void,\n\tdrawRectStroke(\n\t\tpos: Vec2,\n\t\tw: number,\n\t\th: number,\n\t\tconf?: DrawRectStrokeConf,\n\t): void,\n\tdrawLine(\n\t\tp1: Vec2,\n\t\tp2: Vec2,\n\t\tconf?: DrawLineConf,\n\t): void,\n\tframeStart(): void,\n\tframeEnd(): void,\n\tpushTransform(): void,\n\tpopTransform(): void,\n\tpushMatrix(m: Mat4): void,\n\tdrawCalls(): number,\n};\n\nconst DEF_ORIGIN = \"topleft\";\nconst STRIDE = 9;\nconst QUEUE_COUNT = 65536;\nconst BG_GRID_SIZE = 64;\n\nconst VERT_TEMPLATE = `\nattribute vec3 a_pos;\nattribute vec2 a_uv;\nattribute vec4 a_color;\n\nvarying vec3 v_pos;\nvarying vec2 v_uv;\nvarying vec4 v_color;\n\nvec4 def_vert() {\n\treturn vec4(a_pos, 1.0);\n}\n\n{{user}}\n\nvoid main() {\n\tvec4 pos = vert(a_pos, a_uv, a_color);\n\tv_pos = a_pos;\n\tv_uv = a_uv;\n\tv_color = a_color;\n\tgl_Position = pos;\n}\n`;\n\nconst FRAG_TEMPLATE = `\nprecision mediump float;\n\nvarying vec3 v_pos;\nvarying vec2 v_uv;\nvarying vec4 v_color;\n\nuniform sampler2D u_tex;\n\nvec4 def_frag() {\n\treturn v_color * texture2D(u_tex, v_uv);\n}\n\n{{user}}\n\nvoid main() {\n\tgl_FragColor = frag(v_pos, v_uv, v_color, u_tex);\n\tif (gl_FragColor.a == 0.0) {\n\t\tdiscard;\n\t}\n}\n`;\n\nconst DEF_VERT = `\nvec4 vert(vec3 pos, vec2 uv, vec4 color) {\n\treturn def_vert();\n}\n`;\n\nconst DEF_FRAG = `\nvec4 frag(vec3 pos, vec2 uv, vec4 color, sampler2D tex) {\n\treturn def_frag();\n}\n`;\n\nfunction originPt(orig: Origin | Vec2): Vec2 {\n\tswitch (orig) {\n\t\tcase \"topleft\": return vec2(-1, -1);\n\t\tcase \"top\": return vec2(0, -1);\n\t\tcase \"topright\": return vec2(1, -1);\n\t\tcase \"left\": return vec2(-1, 0);\n\t\tcase \"center\": return vec2(0, 0);\n\t\tcase \"right\": return vec2(1, 0);\n\t\tcase \"botleft\": return vec2(-1, 1);\n\t\tcase \"bot\": return vec2(0, 1);\n\t\tcase \"botright\": return vec2(1, 1);\n\t\tdefault: return orig;\n\t}\n}\n\nfunction gfxInit(gl: WebGLRenderingContext, gconf: GfxConf): Gfx {\n\n\tconst texFilter = (() => {\n\t\tswitch (gconf.texFilter) {\n\t\t\tcase \"linear\": return gl.LINEAR;\n\t\t\tcase \"nearest\": return gl.NEAREST;\n\t\t\tdefault: return gl.NEAREST;\n\t\t}\n\t})();\n\n\tconst gfx: GfxCtx = (() => {\n\n\t\tconst defProg = makeProgram(DEF_VERT, DEF_FRAG);\n\t\tconst emptyTex = makeTex(\n\t\t\tnew ImageData(new Uint8ClampedArray([ 255, 255, 255, 255, ]), 1, 1)\n\t\t);\n\n\t\tconst c = gconf.clearColor ?? rgba(0, 0, 0, 1);\n\n\t\tgl.clearColor(c.r, c.g, c.b, c.a);\n\t\tgl.enable(gl.BLEND);\n\t\tgl.blendFuncSeparate(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n\n\t\tconst vbuf = gl.createBuffer();\n\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, vbuf);\n\t\tgl.bufferData(gl.ARRAY_BUFFER, QUEUE_COUNT * 4, gl.DYNAMIC_DRAW);\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, null);\n\n\t\tconst ibuf = gl.createBuffer();\n\n\t\tgl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, ibuf);\n\t\tgl.bufferData(gl.ELEMENT_ARRAY_BUFFER, QUEUE_COUNT * 2, gl.DYNAMIC_DRAW);\n\t\tgl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n\n\t\tconst bgTex = makeTex(\n\t\t\tnew ImageData(new Uint8ClampedArray([\n\t\t\t\t128, 128, 128, 255,\n\t\t\t\t190, 190, 190, 255,\n\t\t\t\t190, 190, 190, 255,\n\t\t\t\t128, 128, 128, 255,\n\t\t\t]), 2, 2)\n\t\t);\n\n\t\treturn {\n\t\t\tdrawCalls: 0,\n\t\t\tlastDrawCalls: 0,\n\t\t\tdefProg: defProg,\n\t\t\tcurProg: defProg,\n\t\t\tdefTex: emptyTex,\n\t\t\tcurTex: emptyTex,\n\t\t\tcurUniform: {},\n\t\t\tvbuf: vbuf,\n\t\t\tibuf: ibuf,\n\t\t\tvqueue: [],\n\t\t\tiqueue: [],\n\t\t\ttransform: mat4(),\n\t\t\ttransformStack: [],\n\t\t\tclearColor: c,\n\t\t\tbgTex: bgTex,\n\t\t};\n\n\t})();\n\n\tframeStart();\n\tframeEnd();\n\n\tfunction powerOfTwo(n) {\n\t\treturn (Math.log(n) / Math.log(2)) % 1 === 0;\n\t}\n\n\tfunction makeTex(data: GfxTextureData): GfxTexture {\n\n\t\tconst id = gl.createTexture();\n\n\t\tgl.bindTexture(gl.TEXTURE_2D, id);\n\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, data);\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, texFilter);\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, texFilter);\n\n\t\tconst wrap = (() => {\n\t\t\tif (powerOfTwo(data.width) && powerOfTwo(data.height)) {\n\t\t\t\treturn gl.REPEAT;\n\t\t\t} else {\n\t\t\t\treturn gl.CLAMP_TO_EDGE;\n\t\t\t}\n\t\t})();\n\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, wrap);\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, wrap);\n\t\tgl.bindTexture(gl.TEXTURE_2D, null);\n\n\t\treturn {\n\t\t\twidth: data.width,\n\t\t\theight: data.height,\n\t\t\tbind() {\n\t\t\t\tgl.bindTexture(gl.TEXTURE_2D, id);\n\t\t\t},\n\t\t\tunbind() {\n\t\t\t\tgl.bindTexture(gl.TEXTURE_2D, null);\n\t\t\t},\n\t\t};\n\n\t}\n\n\tfunction makeProgram(\n\t\tvertSrc: string | null = DEF_VERT,\n\t\tfragSrc: string | null = DEF_FRAG,\n\t): GfxProgram {\n\n\t\tlet msg;\n\t\tconst vcode = VERT_TEMPLATE.replace(\"{{user}}\", vertSrc ?? DEF_VERT);\n\t\tconst fcode = FRAG_TEMPLATE.replace(\"{{user}}\", fragSrc ?? DEF_FRAG);\n\t\tconst vertShader = gl.createShader(gl.VERTEX_SHADER);\n\t\tconst fragShader = gl.createShader(gl.FRAGMENT_SHADER);\n\n\t\tgl.shaderSource(vertShader, vcode);\n\t\tgl.shaderSource(fragShader, fcode);\n\t\tgl.compileShader(vertShader);\n\t\tgl.compileShader(fragShader);\n\n\t\tif ((msg = gl.getShaderInfoLog(vertShader))) {\n\t\t\tthrow new Error(msg);\n\t\t}\n\n\t\tif ((msg = gl.getShaderInfoLog(fragShader))) {\n\t\t\tthrow new Error(msg);\n\t\t}\n\n\t\tconst id = gl.createProgram();\n\n\t\tgl.attachShader(id, vertShader);\n\t\tgl.attachShader(id, fragShader);\n\n\t\tgl.bindAttribLocation(id, 0, \"a_pos\");\n\t\tgl.bindAttribLocation(id, 1, \"a_uv\");\n\t\tgl.bindAttribLocation(id, 2, \"a_color\");\n\n\t\tgl.linkProgram(id);\n\n\t\tif ((msg = gl.getProgramInfoLog(id))) {\n\t\t\t// for some reason on safari it always has a \"\\n\" msg\n\t\t\tif (msg !== \"\\n\") {\n\t\t\t\tthrow new Error(msg);\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\n\t\t\tbind() {\n\t\t\t\tgl.useProgram(id);\n\t\t\t},\n\n\t\t\tunbind() {\n\t\t\t\tgl.useProgram(null);\n\t\t\t},\n\n\t\t\tbindAttribs() {\n\t\t\t\tgl.vertexAttribPointer(0, 3, gl.FLOAT, false, STRIDE * 4, 0);\n\t\t\t\tgl.enableVertexAttribArray(0);\n\t\t\t\tgl.vertexAttribPointer(1, 2, gl.FLOAT, false, STRIDE * 4, 12);\n\t\t\t\tgl.enableVertexAttribArray(1);\n\t\t\t\tgl.vertexAttribPointer(2, 4, gl.FLOAT, false, STRIDE * 4, 20);\n\t\t\t\tgl.enableVertexAttribArray(2);\n\t\t\t},\n\n\t\t\tsend(uniform: Uniform) {\n\t\t\t\tthis.bind();\n\t\t\t\tfor (const name in uniform) {\n\t\t\t\t\tconst val = uniform[name];\n\t\t\t\t\tconst loc = gl.getUniformLocation(id, name);\n\t\t\t\t\tif (typeof val === \"number\") {\n\t\t\t\t\t\tgl.uniform1f(loc, val);\n\t\t\t\t\t} else if (isMat4(val)) {\n\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\tgl.uniformMatrix4fv(loc, false, new Float32Array(val.m));\n\t\t\t\t\t} else if (isColor(val)) {\n\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\tgl.uniform4f(loc, val.r, val.g, val.b, val.a);\n\t\t\t\t\t} else if (isVec3(val)) {\n\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\tgl.uniform3f(loc, val.x, val.y, val.z);\n\t\t\t\t\t} else if (isVec2(val)) {\n\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\tgl.uniform2f(loc, val.x, val.y);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.unbind();\n\t\t\t},\n\n\t\t};\n\n\t}\n\n\tfunction makeFont(\n\t\ttex: GfxTexture,\n\t\tgw: number,\n\t\tgh: number,\n\t\tchars: string,\n\t): GfxFont {\n\n\t\tconst cols = tex.width / gw;\n\t\tconst rows = tex.height / gh;\n\t\tconst qw = 1.0 / cols;\n\t\tconst qh = 1.0 / rows;\n\t\tconst map: Record<string, Vec2> = {};\n\t\tconst charMap = chars.split(\"\").entries();\n\n\t\tfor (const [i, ch] of charMap) {\n\t\t\tmap[ch] = vec2(\n\t\t\t\t(i % cols) * qw,\n\t\t\t\tMath.floor(i / cols) * qh,\n\t\t\t);\n\t\t}\n\n\t\treturn {\n\t\t\ttex: tex,\n\t\t\tmap: map,\n\t\t\tqw: qw,\n\t\t\tqh: qh,\n\t\t};\n\n\t}\n\n\t// TODO: expose\n\tfunction drawRaw(\n\t\tverts: Vertex[],\n\t\tindices: number[],\n\t\ttex: GfxTexture = gfx.defTex,\n\t\tprog: GfxProgram = gfx.defProg,\n\t\tuniform: Uniform = {},\n\t) {\n\n\t\ttex = tex ?? gfx.defTex;\n\t\tprog = prog ?? gfx.defProg;\n\n\t\t// flush on texture / shader change and overflow\n\t\tif (\n\t\t\ttex !== gfx.curTex\n\t\t\t|| prog !== gfx.curProg\n\t\t\t|| !deepEq(gfx.curUniform, uniform)\n\t\t\t|| gfx.vqueue.length + verts.length * STRIDE > QUEUE_COUNT\n\t\t\t|| gfx.iqueue.length + indices.length > QUEUE_COUNT\n\t\t) {\n\t\t\tflush();\n\t\t}\n\n\t\tgfx.curTex = tex;\n\t\tgfx.curProg = prog;\n\t\tgfx.curUniform = uniform;\n\n\t\tconst nIndices = indices\n\t\t\t.map((i) => {\n\t\t\t\treturn i + gfx.vqueue.length / STRIDE;\n\t\t\t});\n\n\t\tconst nVerts = verts\n\t\t\t.map((v) => {\n\t\t\t\tconst pt = toNDC(gfx.transform.multVec2(v.pos.xy()));\n\t\t\t\treturn [\n\t\t\t\t\tpt.x, pt.y, v.pos.z,\n\t\t\t\t\tv.uv.x, v.uv.y,\n\t\t\t\t\tv.color.r, v.color.g, v.color.b, v.color.a\n\t\t\t\t];\n\t\t\t})\n\t\t\t.flat();\n\n\t\tnIndices.forEach((i) => gfx.iqueue.push(i));\n\t\tnVerts.forEach((v) => gfx.vqueue.push(v));\n\n\t}\n\n\tfunction flush() {\n\n\t\tif (\n\t\t\t!gfx.curTex\n\t\t\t|| !gfx.curProg\n\t\t\t|| gfx.vqueue.length === 0\n\t\t\t|| gfx.iqueue.length === 0\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tgfx.curProg.send(gfx.curUniform);\n\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, gfx.vbuf);\n\t\tgl.bufferSubData(gl.ARRAY_BUFFER, 0, new Float32Array(gfx.vqueue));\n\t\tgl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, gfx.ibuf);\n\t\tgl.bufferSubData(gl.ELEMENT_ARRAY_BUFFER, 0, new Uint16Array(gfx.iqueue));\n\t\tgfx.curProg.bind();\n\t\tgfx.curProg.bindAttribs();\n\t\tgfx.curTex.bind();\n\t\tgl.drawElements(gl.TRIANGLES, gfx.iqueue.length, gl.UNSIGNED_SHORT, 0);\n\t\tgfx.curTex.unbind();\n\t\tgfx.curProg.unbind();\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, null);\n\t\tgl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n\n\t\tgfx.iqueue = [];\n\t\tgfx.vqueue = [];\n\n\t\tgfx.drawCalls++;\n\n\t}\n\n\tfunction frameStart() {\n\n\t\tgl.clear(gl.COLOR_BUFFER_BIT);\n\n\t\tif (!gconf.clearColor) {\n\t\t\tdrawQuad({\n\t\t\t\twidth: width(),\n\t\t\t\theight: height(),\n\t\t\t\tquad: quad(\n\t\t\t\t\t0,\n\t\t\t\t\t0,\n\t\t\t\t\twidth() * scale() / BG_GRID_SIZE,\n\t\t\t\t\theight() * scale() / BG_GRID_SIZE,\n\t\t\t\t),\n\t\t\t\ttex: gfx.bgTex,\n\t\t\t})\n\t\t}\n\n\t\tgfx.drawCalls = 0;\n\t\tgfx.transformStack = [];\n\t\tgfx.transform = mat4();\n\n\t}\n\n\tfunction frameEnd() {\n\t\tflush();\n\t\tgfx.lastDrawCalls = gfx.drawCalls;\n\t}\n\n\tfunction drawCalls() {\n\t\treturn gfx.lastDrawCalls;\n\t}\n\n\tfunction toNDC(pt: Vec2): Vec2 {\n\t\treturn vec2(\n\t\t\tpt.x / width() * 2 - 1,\n\t\t\t-pt.y / height() * 2 + 1,\n\t\t);\n\t}\n\n\t// TODO: don't use push as prefix for these\n\tfunction pushMatrix(m: Mat4) {\n\t\tgfx.transform = m.clone();\n\t}\n\n\tfunction pushTranslate(p: Vec2) {\n\t\tif (!p || (p.x === 0 && p.y === 0)) {\n\t\t\treturn;\n\t\t}\n\t\tgfx.transform = gfx.transform.translate(p);\n\t}\n\n\tfunction pushScale(p: Vec2) {\n\t\tif (!p || (p.x === 1 && p.y === 1)) {\n\t\t\treturn;\n\t\t}\n\t\tgfx.transform = gfx.transform.scale(p);\n\t}\n\n\tfunction pushRotateX(a: number) {\n\t\tif (!a) {\n\t\t\treturn;\n\t\t}\n\t\tgfx.transform = gfx.transform.rotateX(a);\n\t}\n\n\tfunction pushRotateY(a: number) {\n\t\tif (!a) {\n\t\t\treturn;\n\t\t}\n\t\tgfx.transform = gfx.transform.rotateY(a);\n\t}\n\n\tfunction pushRotateZ(a: number) {\n\t\tif (!a) {\n\t\t\treturn;\n\t\t}\n\t\tgfx.transform = gfx.transform.rotateZ(a);\n\t}\n\n\tfunction pushTransform() {\n\t\tgfx.transformStack.push(gfx.transform.clone());\n\t}\n\n\tfunction popTransform() {\n\t\tif (gfx.transformStack.length > 0) {\n\t\t\tgfx.transform = gfx.transformStack.pop();\n\t\t}\n\t}\n\n\t// TODO: clean\n\t// draw a textured quad\n\tfunction drawQuad(conf: DrawQuadConf = {}) {\n\n\t\tconst w = conf.width || 0;\n\t\tconst h = conf.height || 0;\n\t\tconst pos = conf.pos || vec2(0, 0);\n\t\tconst origin = originPt(conf.origin || DEF_ORIGIN);\n\t\tconst offset = origin.dot(vec2(w, h).scale(-0.5));\n\t\tconst scale = vec2(conf.scale ?? 1);\n\t\tconst rot = conf.rot || 0;\n\t\tconst q = conf.quad || quad(0, 0, 1, 1);\n\t\tconst z = 1 - (conf.z ?? 0);\n\t\tconst color = conf.color || rgba(1, 1, 1, 1);\n\n\t\tpushTransform();\n\t\tpushTranslate(pos);\n\t\tpushScale(scale);\n\t\tpushRotateZ(rot);\n\t\tpushTranslate(offset);\n\n\t\tdrawRaw([\n\t\t\t{\n\t\t\t\tpos: vec3(-w / 2, h / 2, z),\n\t\t\t\tuv: vec2(q.x, q.y + q.h),\n\t\t\t\tcolor: color,\n\t\t\t},\n\t\t\t{\n\t\t\t\tpos: vec3(-w / 2, -h / 2, z),\n\t\t\t\tuv: vec2(q.x, q.y),\n\t\t\t\tcolor: color,\n\t\t\t},\n\t\t\t{\n\t\t\t\tpos: vec3(w / 2, -h / 2, z),\n\t\t\t\tuv: vec2(q.x + q.w, q.y),\n\t\t\t\tcolor: color,\n\t\t\t},\n\t\t\t{\n\t\t\t\tpos: vec3(w / 2, h / 2, z),\n\t\t\t\tuv: vec2(q.x + q.w, q.y + q.h),\n\t\t\t\tcolor: color,\n\t\t\t},\n\t\t], [0, 1, 3, 1, 2, 3], conf.tex, conf.prog, conf.uniform);\n\n\t\tpopTransform();\n\n\t}\n\n\tfunction drawTexture(\n\t\ttex: GfxTexture,\n\t\tconf: DrawTextureConf = {},\n\t) {\n\n\t\tconst q = conf.quad ?? quad(0, 0, 1, 1);\n\t\tconst w = tex.width * q.w;\n\t\tconst h = tex.height * q.h;\n\n\t\tdrawQuad({\n\t\t\t...conf,\n\t\t\ttex: tex,\n\t\t\tquad: q,\n\t\t\twidth: w,\n\t\t\theight: h,\n\t\t});\n\n\t}\n\n\tfunction drawRect(\n\t\tpos: Vec2,\n\t\tw: number,\n\t\th: number,\n\t\tconf: DrawRectConf = {}\n\t) {\n\t\tdrawQuad({\n\t\t\t...conf,\n\t\t\tpos: pos,\n\t\t\twidth: w,\n\t\t\theight: h,\n\t\t});\n\t}\n\n\tfunction drawRectStroke(\n\t\tpos: Vec2,\n\t\tw: number,\n\t\th: number,\n\t\tconf: DrawRectStrokeConf = {}\n\t) {\n\n\t\tconst offset = originPt(conf.origin || DEF_ORIGIN).dot(vec2(w, h)).scale(0.5);\n\t\tconst p1 = pos.add(vec2(-w / 2, -h / 2)).sub(offset);\n\t\tconst p2 = pos.add(vec2(-w / 2,  h / 2)).sub(offset);\n\t\tconst p3 = pos.add(vec2( w / 2,  h / 2)).sub(offset);\n\t\tconst p4 = pos.add(vec2( w / 2, -h / 2)).sub(offset);\n\n\t\tdrawLine(p1, p2, conf);\n\t\tdrawLine(p2, p3, conf);\n\t\tdrawLine(p3, p4, conf);\n\t\tdrawLine(p4, p1, conf);\n\n\t}\n\n\tfunction drawLine(\n\t\tp1: Vec2,\n\t\tp2: Vec2,\n\t\tconf: DrawLineConf = {},\n\t) {\n\n\t\tconst w = conf.width || 1;\n\t\tconst h = p1.dist(p2);\n\t\tconst rot = Math.PI / 2 - p1.angle(p2);\n\n\t\tdrawQuad({\n\t\t\t...conf,\n\t\t\tpos: p1.add(p2).scale(0.5),\n\t\t\twidth: w,\n\t\t\theight: h,\n\t\t\trot: rot,\n\t\t\torigin: \"center\",\n\t\t});\n\n\t}\n\n\t// format text and return a list of chars with their calculated position\n\tfunction fmtText(\n\t\ttext: string,\n\t\tfont: GfxFont,\n\t\tconf: DrawTextConf = {}\n\t): FormattedText {\n\n\t\tconst chars = (text + \"\").split(\"\");\n\t\tconst gw = font.qw * font.tex.width;\n\t\tconst gh = font.qh * font.tex.height;\n\t\tconst size = conf.size || gh;\n\t\tconst scale = vec2(size / gh).dot(vec2(conf.scale || 1));\n\t\tconst cw = scale.x * gw;\n\t\tconst ch = scale.y * gh;\n\t\tlet curX = 0;\n\t\tlet th = ch;\n\t\tlet tw = 0;\n\t\tconst flines = [[]];\n\n\t\t// check new lines and calc area size\n\t\tfor (const char of chars) {\n\t\t\t// go new line if \\n or exceeds wrap value\n\t\t\tif (char === \"\\n\" || (conf.width ? (curX + cw > conf.width) : false)) {\n\t\t\t\tth += ch;\n\t\t\t\tcurX = 0;\n\t\t\t\tflines.push([]);\n\t\t\t}\n\t\t\tif (char !== \"\\n\") {\n\t\t\t\tflines[flines.length - 1].push(char);\n\t\t\t\tcurX += cw;\n\t\t\t}\n\t\t\ttw = Math.max(tw, curX);\n\t\t}\n\n\t\tif (conf.width) {\n\t\t\ttw = conf.width;\n\t\t}\n\n\t\t// whole text offset\n\t\tconst fchars = [];\n\t\tconst pos = vec2(conf.pos || 0);\n\t\tconst offset = originPt(conf.origin || DEF_ORIGIN).scale(0.5);\n\t\t// this math is complicated i forgot how it works instantly\n\t\tconst ox = -offset.x * cw - (offset.x + 0.5) * (tw - cw);\n\t\tconst oy = -offset.y * ch - (offset.y + 0.5) * (th - ch);\n\n\t\tflines.forEach((line, ln) => {\n\n\t\t\t// line offset\n\t\t\tconst oxl = (tw - line.length * cw) * (offset.x + 0.5);\n\n\t\t\tline.forEach((char, cn) => {\n\t\t\t\tconst qpos = font.map[char];\n\t\t\t\tconst x = cn * cw;\n\t\t\t\tconst y = ln * ch;\n\t\t\t\tif (qpos) {\n\t\t\t\t\tfchars.push({\n\t\t\t\t\t\ttex: font.tex,\n\t\t\t\t\t\tquad: quad(qpos.x, qpos.y, font.qw, font.qh),\n\t\t\t\t\t\tch: char,\n\t\t\t\t\t\tpos: vec2(pos.x + x + ox + oxl, pos.y + y + oy),\n\t\t\t\t\t\tcolor: conf.color,\n\t\t\t\t\t\torigin: conf.origin,\n\t\t\t\t\t\tscale: scale,\n\t\t\t\t\t\tz: conf.z,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\treturn {\n\t\t\twidth: tw,\n\t\t\theight: th,\n\t\t\tchars: fchars,\n\t\t};\n\n\t}\n\n\tfunction drawText(\n\t\ttxt: string,\n\t\tfont: GfxFont,\n\t\tconf = {},\n\t) {\n\t\tdrawFmtText(fmtText(txt, font, conf));\n\t}\n\n\t// TODO: rotation\n\tfunction drawFmtText(ftext: FormattedText) {\n\t\tfor (const ch of ftext.chars) {\n\t\t\tdrawQuad({\n\t\t\t\ttex: ch.tex,\n\t\t\t\twidth: ch.tex.width * ch.quad.w,\n\t\t\t\theight: ch.tex.height * ch.quad.h,\n\t\t\t\tpos: ch.pos,\n\t\t\t\tscale: ch.scale,\n\t\t\t\tcolor: ch.color,\n\t\t\t\tquad: ch.quad,\n\t\t\t\t// TODO: topleft\n\t\t\t\torigin: \"center\",\n\t\t\t\tz: ch.z,\n\t\t\t});\n\t\t}\n\t}\n\n\t// get current canvas width\n\tfunction width(): number {\n\t\treturn gl.drawingBufferWidth / scale();\n\t}\n\n\t// get current canvas height\n\tfunction height(): number {\n\t\treturn gl.drawingBufferHeight / scale();\n\t}\n\n\tfunction scale(): number {\n\t\treturn gconf.scale ?? 1;\n\t}\n\n\tfunction clearColor(): Color {\n\t\treturn gfx.clearColor.clone();\n\t}\n\n\t// TODO: type this\n\treturn {\n\t\twidth,\n\t\theight,\n\t\tscale,\n\t\tmakeTex,\n\t\tmakeProgram,\n\t\tmakeFont,\n\t\tdrawTexture,\n\t\tdrawText,\n\t\tdrawFmtText,\n\t\tdrawRect,\n\t\tdrawRectStroke,\n\t\tdrawLine,\n\t\tfmtText,\n\t\tframeStart,\n\t\tframeEnd,\n\t\tpushTransform,\n\t\tpopTransform,\n\t\tpushMatrix,\n\t\tdrawCalls,\n\t\tclearColor,\n\t};\n\n}\n\nexport {\n\tGfx,\n\toriginPt,\n\tgfxInit,\n};\n","import {\n\tvec2,\n} from \"./math\";\n\ntype ButtonState =\n\t\"up\"\n\t| \"pressed\"\n\t| \"rpressed\"\n\t| \"down\"\n\t| \"released\"\n\t;\n\ntype AppConf = {\n\twidth?: number,\n\theight?: number,\n\tscale?: number,\n\tfullscreen?: boolean,\n\tcrisp?: boolean,\n\tcanvas?: HTMLCanvasElement,\n\troot?: HTMLElement,\n};\n\ntype AppCtx = {\n\tcanvas: HTMLCanvasElement,\n\tmousePos: Vec2,\n\tmouseState: ButtonState,\n\tkeyStates: Record<string, ButtonState>,\n\tcharInputted: string[],\n\ttime: number,\n\tdt: number,\n\trealTime: number,\n\tskipTime: boolean,\n\tscale: number,\n\tisTouch: boolean,\n\tloopID: number | null,\n\tstopped: boolean,\n\tfps: number,\n\tfpsBuf: number[],\n\tfpsTimer: number,\n};\n\ntype App = {\n\tgl: WebGLRenderingContext,\n\tmousePos(): Vec2,\n\tkeyDown(k: string): boolean,\n\tkeyPressed(k: string): boolean,\n\tkeyPressedRep(k: string): boolean,\n\tkeyReleased(k: string): boolean,\n\tmouseDown(): boolean,\n\tmouseClicked(): boolean,\n\tmouseReleased(): boolean,\n\tcharInputted(): string[],\n\tcursor(c?: string): void,\n\tdt(): number,\n\tfps(): number,\n\ttime(): number,\n\tscreenshot(): string,\n\trun(f: () => void): void,\n\tquit(): void,\n};\n\nfunction processBtnState(s: ButtonState): ButtonState {\n\tif (s === \"pressed\" || s === \"rpressed\") {\n\t\treturn \"down\";\n\t}\n\tif (s === \"released\") {\n\t\treturn \"up\";\n\t}\n\treturn s;\n}\n\nfunction appInit(gconf: AppConf = {}): App {\n\n\tconst app: AppCtx = {\n\t\tcanvas: gconf.canvas ?? (() => {\n\t\t\tconst canvas = document.createElement(\"canvas\");\n\t\t\t(gconf.root ?? document.body).appendChild(canvas);\n\t\t\treturn canvas;\n\t\t})(),\n\t\tkeyStates: {},\n\t\tcharInputted: [],\n\t\tmouseState: \"up\",\n\t\tmousePos: vec2(0, 0),\n\t\ttime: 0,\n\t\trealTime: 0,\n\t\tskipTime: false,\n\t\tdt: 0.0,\n\t\tscale: gconf.scale ?? 1,\n\t\tisTouch: false,\n\t\tloopID: null,\n\t\tstopped: false,\n\t\tfps: 0,\n\t\tfpsBuf: [],\n\t\tfpsTimer: 0,\n\t};\n\n\tconst keyMap = {\n\t\t\"ArrowLeft\": \"left\",\n\t\t\"ArrowRight\": \"right\",\n\t\t\"ArrowUp\": \"up\",\n\t\t\"ArrowDown\": \"down\",\n\t\t\" \": \"space\",\n\t};\n\n\tconst preventDefaultKeys = [\n\t\t\"space\",\n\t\t\"left\",\n\t\t\"right\",\n\t\t\"up\",\n\t\t\"down\",\n\t\t\"tab\",\n\t\t\"f1\",\n\t\t\"f2\",\n\t\t\"f3\",\n\t\t\"f4\",\n\t\t\"f5\",\n\t\t\"f6\",\n\t\t\"f7\",\n\t\t\"f8\",\n\t\t\"f9\",\n\t\t\"f10\",\n\t\t\"f11\",\n\t];\n\n\tif (gconf.fullscreen) {\n\t\tapp.canvas.width = window.innerWidth;\n\t\tapp.canvas.height = window.innerHeight;\n\t} else {\n\t\tapp.canvas.width = (gconf.width || 640) * app.scale;\n\t\tapp.canvas.height = (gconf.height || 480) * app.scale;\n\t}\n\n\tconst styles = [\n\t\t\"outline: none\",\n\t\t\"cursor: default\",\n\t];\n\n\tif (gconf.crisp) {\n\t\tstyles.push(\"image-rendering: pixelated\");\n\t\tstyles.push(\"image-rendering: crisp-edges\");\n\t}\n\n\t// @ts-ignore\n\tapp.canvas.style = styles.join(\";\");\n\tapp.canvas.setAttribute(\"tabindex\", \"0\");\n\n\tconst gl = app.canvas\n\t\t.getContext(\"webgl\", {\n\t\t\tantialias: true,\n\t\t\tdepth: true,\n\t\t\tstencil: true,\n\t\t\talpha: true,\n\t\t\tpreserveDrawingBuffer: true,\n\t\t});\n\n\tapp.isTouch = (\"ontouchstart\" in window) ||\n\t\t(navigator.maxTouchPoints > 0) ||\n\t\t(navigator.msMaxTouchPoints > 0);\n\n\tapp.canvas.addEventListener(\"mousemove\", (e) => {\n\t\tapp.mousePos = vec2(e.offsetX, e.offsetY).scale(1 / app.scale);\n\t});\n\n\tapp.canvas.addEventListener(\"mousedown\", () => {\n\t\tapp.mouseState = \"pressed\";\n\t});\n\n\tapp.canvas.addEventListener(\"mouseup\", () => {\n\t\tapp.mouseState = \"released\";\n\t});\n\n\tapp.canvas.addEventListener(\"touchstart\", (e) => {\n\t\tconst t = e.touches[0];\n\t\tapp.mousePos = vec2(t.clientX, t.clientY).scale(1 / app.scale);\n\t\tapp.mouseState = \"pressed\";\n\t});\n\n\tapp.canvas.addEventListener(\"touchmove\", (e) => {\n\t\tconst t = e.touches[0];\n\t\tapp.mousePos = vec2(t.clientX, t.clientY).scale(1 / app.scale);\n\t});\n\n\tapp.canvas.addEventListener(\"keydown\", (e) => {\n\n\t\tconst k = keyMap[e.key] || e.key.toLowerCase();\n\n\t\tif (preventDefaultKeys.includes(k)) {\n\t\t\te.preventDefault();\n\t\t}\n\n\t\tif (k.length === 1) {\n\t\t\tapp.charInputted.push(k);\n\t\t}\n\n\t\tif (k === \"space\") {\n\t\t\tapp.charInputted.push(\" \");\n\t\t}\n\n\t\tif (e.repeat) {\n\t\t\tapp.keyStates[k] = \"rpressed\";\n\t\t} else {\n\t\t\tapp.keyStates[k] = \"pressed\";\n\t\t}\n\n\t});\n\n\tapp.canvas.addEventListener(\"keyup\", (e: KeyboardEvent) => {\n\t\tconst k = keyMap[e.key] || e.key.toLowerCase();\n\t\tapp.keyStates[k] = \"released\";\n\t});\n\n\tapp.canvas.focus();\n\n\tdocument.addEventListener(\"visibilitychange\", () => {\n\t\tswitch (document.visibilityState) {\n\t\t\tcase \"visible\":\n\t\t\t\t// prevent a surge of dt() when switch back after the tab being hidden for a while\n\t\t\t\tapp.skipTime = true;\n//  \t\t\t\taudio.ctx().resume();\n\t\t\t\tbreak;\n\t\t\tcase \"hidden\":\n//  \t\t\t\taudio.ctx().suspend();\n\t\t\t\tbreak;\n\t\t}\n\t});\n\n\tfunction mousePos(): Vec2 {\n\t\treturn app.mousePos.clone();\n\t}\n\n\tfunction mouseClicked(): boolean {\n\t\treturn app.mouseState === \"pressed\";\n\t}\n\n\tfunction mouseDown(): boolean {\n\t\treturn app.mouseState === \"pressed\" || app.mouseState === \"down\";\n\t}\n\n\tfunction mouseReleased(): boolean {\n\t\treturn app.mouseState === \"released\";\n\t}\n\n\tfunction keyPressed(k: string): boolean {\n\t\treturn app.keyStates[k] === \"pressed\";\n\t}\n\n\tfunction keyPressedRep(k: string): boolean {\n\t\treturn app.keyStates[k] === \"pressed\" || app.keyStates[k] === \"rpressed\";\n\t}\n\n\tfunction keyDown(k: string): boolean {\n\t\treturn app.keyStates[k] === \"pressed\"\n\t\t\t|| app.keyStates[k] === \"rpressed\"\n\t\t\t|| app.keyStates[k] === \"down\";\n\t}\n\n\tfunction keyReleased(k: string): boolean {\n\t\treturn app.keyStates[k] === \"released\";\n\t}\n\n\tfunction charInputted(): string[] {\n\t\treturn [...app.charInputted];\n\t}\n\n\t// get delta time between last frame\n\tfunction dt(): number {\n\t\treturn app.dt;\n\t}\n\n\t// get current running time\n\tfunction time(): number {\n\t\treturn app.time;\n\t}\n\n\tfunction fps(): number {\n\t\treturn app.fps;\n\t}\n\n\t// get a base64 png image of canvas\n\tfunction screenshot(): string {\n\t\treturn app.canvas.toDataURL();\n\t}\n\n\tfunction cursor(c?: string) {\n\t\tif (c) {\n\t\t\tapp.canvas.style.cursor = c ?? \"default\";\n\t\t}\n\t\treturn app.canvas.style.cursor;\n\t}\n\n\tfunction run(f: () => void) {\n\n\t\tconst frame = (t: number) => {\n\n\t\t\tconst realTime = t / 1000;\n\t\t\tconst realDt = realTime - app.realTime;\n\n\t\t\tapp.realTime = realTime;\n\n\t\t\tif (!app.skipTime) {\n\t\t\t\tapp.dt = realDt;\n\t\t\t\tapp.time += app.dt;\n\t\t\t\tapp.fpsBuf.push(1 / app.dt);\n\t\t\t\tapp.fpsTimer += app.dt;\n\t\t\t\tif (app.fpsTimer >= 1) {\n\t\t\t\t\tapp.fpsTimer = 0;\n\t\t\t\t\tapp.fps = Math.round(app.fpsBuf.reduce((a, b) => a + b) / app.fpsBuf.length);\n\t\t\t\t\tapp.fpsBuf = [];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tapp.skipTime = false;\n\n\t\t\tf();\n\n\t\t\tfor (const k in app.keyStates) {\n\t\t\t\tapp.keyStates[k] = processBtnState(app.keyStates[k]);\n\t\t\t}\n\n\t\t\tapp.mouseState = processBtnState(app.mouseState);\n\t\t\tapp.charInputted = [];\n\n\t\t\tif (!app.stopped) {\n\t\t\t\tapp.loopID = requestAnimationFrame(frame);\n\t\t\t}\n\n\t\t};\n\n\t\tapp.loopID = requestAnimationFrame(frame);\n\n\t}\n\n\tfunction quit() {\n\t\tcancelAnimationFrame(app.loopID);\n\t\tapp.stopped = true;\n\t}\n\n\treturn {\n\t\tgl,\n\t\tmousePos,\n\t\tkeyDown,\n\t\tkeyPressed,\n\t\tkeyPressedRep,\n\t\tkeyReleased,\n\t\tmouseDown,\n\t\tmouseClicked,\n\t\tmouseReleased,\n\t\tcharInputted,\n\t\tcursor,\n\t\tdt,\n\t\ttime,\n\t\tfps,\n\t\tscreenshot,\n\t\trun,\n\t\tquit,\n\t};\n\n}\n\nexport {\n\tApp,\n\tappInit,\n};\n","import {\n\tclamp,\n} from \"./math\";\n\ntype AudioCtx = {\n\tctx: AudioContext,\n\tgainNode: GainNode,\n\tmasterNode: AudioNode,\n};\n\ntype Audio = {\n\tctx(): AudioContext,\n\tvolume(v: number): number,\n\tplay(sound: AudioBuffer, conf?: AudioPlayConf): AudioPlay,\n};\n\nconst MIN_GAIN = 0;\nconst MAX_GAIN = 3;\nconst MIN_SPEED = 0;\nconst MAX_SPEED = 3;\nconst MIN_DETUNE = -1200;\nconst MAX_DETUNE = 1200;\n\nfunction audioInit(): Audio {\n\n\tconst audio: AudioCtx = (() => {\n\n\t\t// @ts-ignore\n\t\tconst ctx = new (window.AudioContext || window.webkitAudioContext)();\n\t\tconst gainNode = ctx.createGain();\n\t\tconst masterNode = gainNode;\n\n\t\tmasterNode.connect(ctx.destination);\n\n\t\treturn {\n\t\t\tctx,\n\t\t\tgainNode,\n\t\t\tmasterNode,\n\t\t};\n\n\t})();\n\n\t// get / set master volume\n\tfunction volume(v?: number): number {\n\t\tif (v !== undefined) {\n\t\t\taudio.gainNode.gain.value = clamp(v, MIN_GAIN, MAX_GAIN);\n\t\t}\n\t\treturn audio.gainNode.gain.value;\n\t}\n\n\t// plays a sound, returns a control handle\n\tfunction play(\n\t\tsound: AudioBuffer,\n\t\tconf: AudioPlayConf = {\n\t\t\tloop: false,\n\t\t\tvolume: 1,\n\t\t\tspeed: 1,\n\t\t\tdetune: 0,\n\t\t\tseek: 0,\n\t\t},\n\t): AudioPlay {\n\n\t\tlet stopped = false;\n\t\tlet srcNode = audio.ctx.createBufferSource();\n\n\t\tsrcNode.buffer = sound;\n\t\tsrcNode.loop = conf.loop ? true : false;\n\n\t\tconst gainNode = audio.ctx.createGain();\n\n\t\tsrcNode.connect(gainNode);\n\t\tgainNode.connect(audio.masterNode);\n\n\t\tconst pos = conf.seek ?? 0;\n\n\t\tsrcNode.start(0, pos);\n\n\t\tlet startTime = audio.ctx.currentTime - pos;\n\t\tlet stopTime: number | null = null;\n\n\t\tconst handle = {\n\n\t\t\tstop() {\n\t\t\t\tif (stopped) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis.pause();\n\t\t\t\tstartTime = audio.ctx.currentTime;\n\t\t\t},\n\n\t\t\tplay(seek?: number) {\n\n\t\t\t\tif (!stopped) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst oldNode = srcNode;\n\n\t\t\t\tsrcNode = audio.ctx.createBufferSource();\n\t\t\t\tsrcNode.buffer = oldNode.buffer;\n\t\t\t\tsrcNode.loop = oldNode.loop;\n\t\t\t\tsrcNode.playbackRate.value = oldNode.playbackRate.value;\n\n\t\t\t\tif (srcNode.detune) {\n\t\t\t\t\tsrcNode.detune.value = oldNode.detune.value;\n\t\t\t\t}\n\n\t\t\t\tsrcNode.connect(gainNode);\n\n\t\t\t\tconst pos = seek ?? this.time();\n\n\t\t\t\tsrcNode.start(0, pos);\n\t\t\t\tstartTime = audio.ctx.currentTime - pos;\n\t\t\t\tstopped = false;\n\t\t\t\tstopTime = null;\n\n\t\t\t},\n\n\t\t\tpause() {\n\t\t\t\tif (stopped) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tsrcNode.stop();\n\t\t\t\tstopped = true;\n\t\t\t\tstopTime = audio.ctx.currentTime;\n\t\t\t},\n\n\t\t\tpaused(): boolean {\n\t\t\t\treturn stopped;\n\t\t\t},\n\n\t\t\tstopped(): boolean {\n\t\t\t\treturn stopped;\n\t\t\t},\n\n\t\t\t// TODO: affect time()\n\t\t\tspeed(val?: number): number {\n\t\t\t\tif (val !== undefined) {\n\t\t\t\t\tsrcNode.playbackRate.value = clamp(val, MIN_SPEED, MAX_SPEED);\n\t\t\t\t}\n\t\t\t\treturn srcNode.playbackRate.value;\n\t\t\t},\n\n\t\t\tdetune(val?: number): number {\n\t\t\t\tif (!srcNode.detune) {\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t\tif (val !== undefined) {\n\t\t\t\t\tsrcNode.detune.value = clamp(val, MIN_DETUNE, MAX_DETUNE);\n\t\t\t\t}\n\t\t\t\treturn srcNode.detune.value;\n\t\t\t},\n\n\t\t\tvolume(val?: number): number {\n\t\t\t\tif (val !== undefined) {\n\t\t\t\t\tgainNode.gain.value = clamp(val, MIN_GAIN, MAX_GAIN);\n\t\t\t\t}\n\t\t\t\treturn gainNode.gain.value;\n\t\t\t},\n\n\t\t\tloop() {\n\t\t\t\tsrcNode.loop = true;\n\t\t\t},\n\n\t\t\tunloop() {\n\t\t\t\tsrcNode.loop = false;\n\t\t\t},\n\n\t\t\tduration(): number {\n\t\t\t\treturn sound.duration;\n\t\t\t},\n\n\t\t\ttime(): number {\n\t\t\t\tif (stopped) {\n\t\t\t\t\treturn stopTime - startTime;\n\t\t\t\t} else {\n\t\t\t\t\treturn audio.ctx.currentTime - startTime;\n\t\t\t\t}\n\t\t\t},\n\n\t\t};\n\n\t\thandle.speed(conf.speed);\n\t\thandle.detune(conf.detune);\n\t\thandle.volume(conf.volume);\n\n\t\treturn handle;\n\n\t}\n\n\tfunction ctx(): AudioContext {\n\t\treturn audio.ctx;\n\t}\n\n\treturn {\n\t\tctx,\n\t\tvolume,\n\t\tplay,\n\t};\n\n}\n\nexport {\n\tAudio,\n\taudioInit,\n};\n","import {\n\tquad,\n} from \"./math\";\n\nimport {\n\tAudio,\n} from \"./audio\";\n\nimport {\n\tGfx,\n} from \"./gfx\";\n\n// @ts-ignore\nimport unsciiSrc from \"./assets/unscii_8x8.png\";\n\ntype AssetsConf = {\n\terrHandler?: (err: string) => void,\n};\n\ntype LoaderID = number;\n\ntype AssetsCtx = {\n\tlastLoaderID: LoaderID,\n\tloadRoot: string,\n\tloaders: Record<number, boolean>,\n\tsprites: Record<string, SpriteData>,\n\tsounds: Record<string, SoundData>,\n\tfonts: Record<string, FontData>,\n\tshaders: Record<string, ShaderData>,\n};\n\ntype Assets = {\n\tloadRoot(path: string): string,\n\tloadSprite(\n\t\tname: string,\n\t\tsrc: SpriteLoadSrc,\n\t\tconf?: SpriteLoadConf,\n\t): Promise<SpriteData>,\n\tloadSound(\n\t\tname: string,\n\t\tsrc: string,\n\t): Promise<SoundData>,\n\tloadFont(\n\t\tname: string,\n\t\tsrc: string,\n\t\tgw: number,\n\t\tgh: number,\n\t\tchars?: string,\n\t): Promise<FontData>,\n\tloadShader(\n\t\tname: string,\n\t\tvert?: string,\n\t\tfrag?: string,\n\t\tisUrl?: boolean,\n\t): Promise<ShaderData>,\n\tloadProgress(): number,\n\taddLoader<T>(prom: Promise<T>): void,\n\tdefFont(): FontData,\n\tsprites: Record<string, SpriteData>,\n\tfonts: Record<string, FontData>,\n\tsounds: Record<string, SoundData>,\n\tshaders: Record<string, ShaderData>,\n};\n\nconst ASCII_CHARS = \" !\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\";\nconst DEF_FONT = \"unscii\";\n\nfunction loadImg(src: string): Promise<HTMLImageElement> {\n\tconst img = new Image();\n\timg.src = src;\n\timg.crossOrigin = \"anonymous\";\n\treturn new Promise<HTMLImageElement>((resolve, reject) => {\n\t\timg.onload = () => {\n\t\t\tresolve(img);\n\t\t};\n\t\timg.onerror = () => {\n\t\t\treject(`failed to load ${src}`);\n\t\t};\n\t});\n}\n\nfunction isDataUrl(src: string): boolean {\n\treturn src.startsWith(\"data:\");\n}\n\nfunction assetsInit(gfx: Gfx, audio: Audio, gconf: AssetsConf = {}): Assets {\n\n\tconst assets: AssetsCtx = {\n\t\tlastLoaderID: 0,\n\t\tloadRoot: \"\",\n\t\tloaders: {},\n\t\tsprites: {},\n\t\tsounds: {},\n\t\tfonts: {},\n\t\tshaders: {},\n\t};\n\n\tfunction addLoader<T>(prom: Promise<T>) {\n\t\tconst id = assets.lastLoaderID;\n\t\tassets.loaders[id] = false;\n\t\tassets.lastLoaderID++;\n\t\tprom\n\t\t\t.catch(gconf.errHandler ?? console.error)\n\t\t\t.finally(() => {\n\t\t\t\tassets.loaders[id] = true;\n\t\t\t});\n\t}\n\n\t// get current load progress\n\tfunction loadProgress(): number {\n\n\t\tlet total = 0;\n\t\tlet loaded = 0;\n\n\t\tfor (const id in assets.loaders) {\n\t\t\ttotal += 1;\n\t\t\tif (assets.loaders[id]) {\n\t\t\t\tloaded += 1;\n\t\t\t}\n\t\t}\n\n\t\treturn loaded / total;\n\n\t}\n\n\t// global load path prefix\n\tfunction loadRoot(path: string): string {\n\t\tif (path) {\n\t\t\tassets.loadRoot = path;\n\t\t}\n\t\treturn assets.loadRoot;\n\t}\n\n\t// load a bitmap font to asset manager\n\tfunction loadFont(\n\t\tname: string,\n\t\tsrc: string,\n\t\tgw: number,\n\t\tgh: number,\n\t\tchars: string = ASCII_CHARS,\n\t): Promise<FontData> {\n\n\t\tconst loader = new Promise<FontData>((resolve, reject) => {\n\n\t\t\tconst path = isDataUrl(src) ? src : assets.loadRoot + src;\n\n\t\t\tloadImg(path)\n\t\t\t\t.then((img) => {\n\t\t\t\t\tconst font = gfx.makeFont(gfx.makeTex(img), gw, gh, chars);\n\t\t\t\t\tassets.fonts[name] = font;\n\t\t\t\t\tresolve(font);\n\t\t\t\t})\n\t\t\t\t.catch(reject);\n\n\t\t});\n\n\t\taddLoader(loader);\n\n\t\treturn loader;\n\n\t}\n\n\t// TODO: use getSprite() functions for async settings\n\t// load a sprite to asset manager\n\tfunction loadSprite(\n\t\tname: string,\n\t\tsrc: SpriteLoadSrc,\n\t\tconf: SpriteLoadConf = {\n\t\t\tsliceX: 1,\n\t\t\tsliceY: 1,\n\t\t\tanims: {},\n\t\t},\n\t): Promise<SpriteData> {\n\n\t\t// synchronously load sprite from local pixel data\n\t\tfunction loadRawSprite(\n\t\t\tname: string,\n\t\t\tsrc: GfxTextureData,\n\t\t\tconf: SpriteLoadConf = {\n\t\t\t\tsliceX: 1,\n\t\t\t\tsliceY: 1,\n\t\t\t\tgridWidth: 0,\n\t\t\t\tgridHeight: 0,\n\t\t\t\tanims: {},\n\t\t\t},\n\t\t) {\n\n\t\t\tconst frames = [];\n\t\t\tconst tex = gfx.makeTex(src);\n\t\t\tconst sliceX = conf.sliceX || tex.width / (conf.gridWidth || tex.width);\n\t\t\tconst sliceY = conf.sliceY || tex.height / (conf.gridHeight || tex.height);\n\t\t\tconst qw = 1 / sliceX;\n\t\t\tconst qh = 1 / sliceY;\n\n\t\t\tfor (let j = 0; j < sliceY; j++) {\n\t\t\t\tfor (let i = 0; i < sliceX; i++) {\n\t\t\t\t\tframes.push(quad(\n\t\t\t\t\t\ti * qw,\n\t\t\t\t\t\tj * qh,\n\t\t\t\t\t\tqw,\n\t\t\t\t\t\tqh,\n\t\t\t\t\t));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst sprite = {\n\t\t\t\ttex: tex,\n\t\t\t\tframes: frames,\n\t\t\t\tanims: conf.anims || {},\n\t\t\t};\n\n\t\t\tassets.sprites[name] = sprite;\n\n\t\t\treturn sprite;\n\n\t\t}\n\n\t\tconst loader = new Promise<SpriteData>((resolve, reject) => {\n\n\t\t\tif (!src) {\n\t\t\t\treturn reject(`expected sprite src for \"${name}\"`);\n\t\t\t}\n\n\t\t\t// from url\n\t\t\tif (typeof(src) === \"string\") {\n\t\t\t\tconst path = isDataUrl(src) ? src : assets.loadRoot + src;\n\t\t\t\tloadImg(path)\n\t\t\t\t\t.then((img) => {\n\t\t\t\t\t\tresolve(loadRawSprite(name, img, conf));\n\t\t\t\t\t})\n\t\t\t\t\t.catch(reject);\n\t\t\t} else {\n\t\t\t\tresolve(loadRawSprite(name, src, conf));\n\t\t\t}\n\n\t\t});\n\n\t\taddLoader(loader);\n\n\t\treturn loader;\n\n\t}\n\n\tfunction loadShader(\n\t\tname: string,\n\t\tvert?: string,\n\t\tfrag?: string,\n\t\tisUrl: boolean = false,\n\t): Promise<ShaderData> {\n\n\t\tfunction loadRawShader(\n\t\t\tname: string,\n\t\t\tvert: string | null,\n\t\t\tfrag: string | null,\n\t\t): ShaderData {\n\t\t\tconst shader = gfx.makeProgram(vert, frag);\n\t\t\tassets.shaders[name] = shader;\n\t\t\treturn shader;\n\t\t}\n\n\t\tconst loader = new Promise<ShaderData>((resolve, reject) => {\n\n\t\t\tif (!vert && !frag) {\n\t\t\t\treturn reject(\"no shader\");\n\t\t\t}\n\n\t\t\tfunction resolveUrl(url?: string) {\n\t\t\t\treturn url ?\n\t\t\t\t\tfetch(assets.loadRoot + url)\n\t\t\t\t\t\t.then((r) => {\n\t\t\t\t\t\t\tif (r.ok) {\n\t\t\t\t\t\t\t\treturn r.text();\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthrow new Error(`failed to load ${url}`)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.catch(reject)\n\t\t\t\t\t: new Promise((r) => r(null));\n\t\t\t}\n\n\t\t\tif (isUrl) {\n\n\t\t\t\tPromise.all([resolveUrl(vert), resolveUrl(frag)])\n\t\t\t\t\t.then(([vcode, fcode]: [string | null, string | null]) => {\n\t\t\t\t\t\tresolve(loadRawShader(name, vcode, fcode));\n\t\t\t\t\t})\n\t\t\t\t\t.catch(reject);\n\t\t\t} else {\n\t\t\t\ttry {\n\t\t\t\t\tresolve(loadRawShader(name, vert, frag));\n\t\t\t\t} catch (err) {\n\t\t\t\t\treject(err);\n\t\t\t\t}\n\t\t\t}\n\n\t\t});\n\n\t\taddLoader(loader);\n\n\t\treturn loader;\n\n\t}\n\n\t// load a sound to asset manager\n\tfunction loadSound(\n\t\tname: string,\n\t\tsrc: string,\n\t): Promise<SoundData> {\n\n\t\tconst url = assets.loadRoot + src;\n\n\t\tconst loader = new Promise<SoundData>((resolve, reject) => {\n\n\t\t\tif (!src) {\n\t\t\t\treturn reject(`expected sound src for \"${name}\"`);\n\t\t\t}\n\n\t\t\t// from url\n\t\t\tif (typeof(src) === \"string\") {\n\n\t\t\t\tfetch(url)\n\t\t\t\t\t.then((res) => {\n\t\t\t\t\t\tif (res.ok) {\n\t\t\t\t\t\t\treturn res.arrayBuffer();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthrow new Error(`failed to load ${url}`);\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\t.then((data) => {\n\t\t\t\t\t\treturn new Promise((resolve2, reject2) => {\n\t\t\t\t\t\t\taudio.ctx().decodeAudioData(data, resolve2, reject2);\n\t\t\t\t\t\t});\n\t\t\t\t\t})\n\t\t\t\t\t.then((buf: AudioBuffer) => {\n\t\t\t\t\t\tassets.sounds[name] = buf;\n\t\t\t\t\t\tresolve(buf);\n\t\t\t\t\t})\n\t\t\t\t\t.catch(reject);\n\n\t\t\t}\n\n\t\t});\n\n\t\taddLoader(loader);\n\n\t\treturn loader;\n\n\t}\n\n\tfunction defFont(): FontData {\n\t\treturn assets.fonts[DEF_FONT];\n\t}\n\n\t// default font unscii http://pelulamu.net/unscii/\n\tloadFont(\n\t\tDEF_FONT,\n\t\tunsciiSrc,\n\t\t8,\n\t\t8\n\t);\n\n\treturn {\n\t\tloadRoot,\n\t\tloadSprite,\n\t\tloadSound,\n\t\tloadFont,\n\t\tloadShader,\n\t\tloadProgress,\n\t\taddLoader,\n\t\tdefFont,\n\t\tsprites: assets.sprites,\n\t\tfonts: assets.fonts,\n\t\tsounds: assets.sounds,\n\t\tshaders: assets.shaders,\n\t};\n\n}\n\nexport {\n\tAssetsConf,\n\tAssets,\n\tassetsInit,\n\tDEF_FONT,\n};\n","import {\n\tvec2,\n\trgba,\n\tmap,\n} from \"./math\";\n\nimport {\n\tAssets,\n} from \"./assets\";\n\nimport {\n\tGfx,\n} from \"./gfx\";\n\ntype Log = {\n\ttype: \"info\" | \"error\",\n\tmsg: string,\n};\n\ntype LoggerConf = {\n\tmax?: number,\n};\n\ntype Logger = {\n\tdraw(): void,\n\tinfo(msg: string): void,\n\terror(msg: string): void,\n\tclear(): void,\n};\n\nconst LOG_SIZE = 16;\n\nfunction loggerInit(gfx: Gfx, assets: Assets, conf: LoggerConf = {\n\tmax: 8,\n}): Logger {\n\n\tlet logs: Log[] = [];\n\tconst max = conf.max ?? 8;\n\n\t// TODO: draw rects first to reduce draw calls\n\t// TODO: make log and progress bar fixed size independent of global scale\n\tfunction draw() {\n\n\t\tif (logs.length > max) {\n\t\t\tlogs = logs.slice(0, max);\n\t\t}\n\n\t\tconst pos = vec2(0, gfx.height());\n\n\t\tlogs.forEach((log, i) => {\n\n\t\t\tconst txtAlpha = map(i, 0, max, 1, 0.5);\n\t\t\tconst bgAlpha = map(i, 0, max, 0.8, 0.2);\n\n\t\t\tconst col = (() => {\n\t\t\t\tswitch (log.type) {\n\t\t\t\t\tcase \"info\": return rgba(1, 1, 1, txtAlpha);\n\t\t\t\t\tcase \"error\": return rgba(1, 0, 0.5, txtAlpha);\n\t\t\t\t}\n\t\t\t})();\n\n\t\t\tconst ftext = gfx.fmtText(log.msg, assets.defFont(), {\n\t\t\t\tpos: pos,\n\t\t\t\torigin: \"botleft\",\n\t\t\t\tcolor: col,\n\t\t\t\tsize: LOG_SIZE / gfx.scale(),\n\t\t\t\twidth: gfx.width(),\n\t\t\t});\n\n\t\t\tgfx.drawRect(pos, ftext.width, ftext.height, {\n\t\t\t\torigin: \"botleft\",\n\t\t\t\tcolor: rgba(0, 0, 0, bgAlpha),\n\t\t\t});\n\n\t\t\tgfx.drawFmtText(ftext);\n\t\t\tpos.y -= ftext.height;\n\n\t\t});\n\n\t}\n\n\tfunction error(msg: string) {\n\t\tconsole.error(msg);\n\t\tlogs.unshift({\n\t\t\ttype: \"error\",\n\t\t\tmsg: msg,\n\t\t});\n\t}\n\n\tfunction info(msg: string) {\n\t\tlogs.unshift({\n\t\t\ttype: \"info\",\n\t\t\tmsg: msg,\n\t\t});\n\t}\n\n\tfunction clear() {\n\t\tlogs = [];\n\t}\n\n\treturn {\n\t\tinfo,\n\t\terror,\n\t\tdraw,\n\t\tclear,\n\t};\n\n}\n\nexport {\n\tloggerInit,\n};\n","type Net = {\n\tconnect(): Promise<WebSocket>,\n\tclose(): void,\n\tconnected(): boolean,\n\trecv(type: string, handler: MsgHandler): void,\n\tsend(type: string, data: any): void,\n};\n\nfunction netInit(url: string): Net {\n\n\tconst handlers: Record<string, MsgHandler[]> = {};\n\tconst sendQueue: string[] = [];\n\n\tlet socket: WebSocket | null = null;\n\n\tfunction connected(): boolean {\n\t\treturn socket !== null && socket.readyState === 1;\n\t}\n\n\tfunction connect(): Promise<WebSocket> {\n\n\t\tconst ws = new WebSocket(url);\n\n\t\treturn new Promise<WebSocket>((resolve, reject) => {\n\n\t\t\tws.onopen = () => {\n\t\t\t\tresolve(ws);\n\t\t\t\tsocket = ws;\n\t\t\t\tfor (const msg of sendQueue) {\n\t\t\t\t\tws.send(msg);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tws.onerror = () => {\n\t\t\t\treject(`failed to connect to ${url}`)\n\t\t\t};\n\n\t\t\tws.onmessage = (e) => {\n\t\t\t\tconst msg = JSON.parse(e.data);\n\t\t\t\tif (handlers[msg.type]) {\n\t\t\t\t\tfor (const handler of handlers[msg.type]) {\n\t\t\t\t\t\thandler(msg.data, msg.id);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\t});\n\n\t}\n\n\tfunction recv(type: string, handler: MsgHandler) {\n\t\tif (!handlers[type]) {\n\t\t\thandlers[type] = [];\n\t\t}\n\t\thandlers[type].push(handler);\n\t}\n\n\tfunction send(type: string, data: any) {\n\t\tconst msg = JSON.stringify({\n\t\t\ttype: type,\n\t\t\tdata: data,\n\t\t});\n\t\tif (socket) {\n\t\t\tsocket.send(msg);\n\t\t} else {\n\t\t\tsendQueue.push(msg)\n\t\t}\n\t}\n\n\tfunction close() {\n\t\tif (socket) {\n\t\t\tsocket.close();\n\t\t}\n\t}\n\n\treturn {\n\t\tconnect,\n\t\tclose,\n\t\tconnected,\n\t\trecv,\n\t\tsend,\n\t};\n\n}\n\nexport {\n\tNet,\n\tnetInit,\n};\n","import {\n\tvec2,\n\tmat4,\n\tquad,\n\trgba,\n\trgb,\n\tmakeRng,\n\trand,\n\trandSeed,\n\tchance,\n\tchoose,\n\tclamp,\n\tlerp,\n\tmap,\n\tmapc,\n\twave,\n\tcolRectRect,\n\toverlapRectRect,\n\tcolRectPt,\n\tvec2FromAngle,\n\tdeg2rad,\n\trad2deg,\n} from \"./math\";\n\nimport {\n\toriginPt,\n\tgfxInit,\n} from \"./gfx\";\n\nimport {\n\tappInit,\n} from \"./app\";\n\nimport {\n\taudioInit,\n} from \"./audio\";\n\nimport {\n\tassetsInit,\n\tDEF_FONT,\n} from \"./assets\";\n\nimport {\n\tloggerInit,\n} from \"./logger\";\n\nimport {\n\tNet,\n\tnetInit,\n} from \"./net\";\n\ntype TimerID = number;\n\n// @ts-ignore\nmodule.exports = (gconf: KaboomConf = {\n\twidth: 640,\n\theight: 480,\n\tscale: 1,\n\tfullscreen: false,\n\tdebug: false,\n\tcrisp: false,\n\tcanvas: null,\n\tconnect: null,\n\tlogMax: 8,\n\troot: document.body,\n}): KaboomCtx => {\n\nconst app = appInit({\n\twidth: gconf.width,\n\theight: gconf.height,\n\tscale: gconf.scale,\n\tfullscreen: gconf.fullscreen,\n\tcrisp: gconf.crisp,\n\tcanvas: gconf.canvas,\n\troot: gconf.root,\n});\n\nconst gfx = gfxInit(app.gl, {\n\tclearColor: gconf.clearColor ? rgba(gconf.clearColor) : undefined,\n\tscale: gconf.scale,\n\ttexFilter: gconf.texFilter,\n});\n\nconst audio = audioInit();\nconst assets = assetsInit(gfx, audio, {\n\terrHandler: (err: string) => {\n\t\tlogger.error(err);\n\t},\n});\n\nconst logger = loggerInit(gfx, assets, {\n\tmax: gconf.logMax,\n});\n\nconst net: Net | null = (() => {\n\tif (gconf.connect) {\n\t\treturn netInit(gconf.connect);\n\t}\n\treturn null;\n})();\n\nfunction recv(type: string, handler: MsgHandler) {\n\tif (!net) {\n\t\tthrow new Error(\"not connected to any websockets\");\n\t}\n\tnet.recv(type, (data: any, id: number) => {\n\t\ttry {\n\t\t\thandler(data, id);\n\t\t} catch (err) {\n\t\t\tlogger.error(err);\n\t\t}\n\t});\n}\n\nfunction send(type: string, data: any) {\n\tif (!net) {\n\t\tthrow new Error(\"not connected to any websockets\");\n\t}\n\tnet.send(type, data);\n}\n\nfunction dt() {\n\treturn app.dt() * debug.timeScale;\n}\n\nfunction play(id: string, conf: AudioPlayConf = {}): AudioPlay {\n\tconst sound = assets.sounds[id];\n\tif (!sound) {\n\t\tthrow new Error(`sound not found: \"${id}\"`);\n\t}\n\treturn audio.play(sound, conf);\n}\n\nfunction isCamLayer(layer?: string): boolean {\n\tconst scene = curScene();\n\treturn !scene.layers[layer ?? scene.defLayer]?.noCam;\n}\n\n// check input state last frame\nfunction mousePos(layer?: string): Vec2 {\n\treturn isCamLayer(layer) ? curScene().cam.mpos : app.mousePos();\n}\n\nfunction drawSprite(\n\tid: string | SpriteData,\n\tconf: DrawSpriteConf = {},\n) {\n\tconst spr = (() => {\n\t\tif (typeof id === \"string\") {\n\t\t\treturn assets.sprites[id];\n\t\t} else {\n\t\t\treturn id;\n\t\t}\n\t})();\n\tif (!spr) {\n\t\tthrow new Error(`sprite not found: \"${id}\"`);\n\t}\n\tconst q = spr.frames[conf.frame ?? 0];\n\tgfx.drawTexture(spr.tex, {\n\t\t...conf,\n\t\tquad: q,\n\t});\n}\n\n// TODO: DrawTextComf\nfunction drawText(\n\ttxt: string,\n\tconf = {},\n) {\n\t// @ts-ignore\n\tconst fid = conf.font ?? DEF_FONT;\n\tconst font = assets.fonts[fid];\n\tif (!font) {\n\t\tthrow new Error(`font not found: ${fid}`);\n\t}\n\tgfx.drawText(txt, font, conf);\n}\n\n// TODO: comp registry?\n// TODO: comps assert required other comps\n\nconst DEF_GRAVITY = 980;\nconst DEF_ORIGIN = \"topleft\";\n\ntype Timer = {\n\ttime: number,\n\tcb(): void,\n};\n\ntype Game = {\n\tloaded: boolean,\n\tscenes: Record<string, Scene>,\n\tcurScene: string | null,\n\tnextScene: SceneSwitch | null,\n};\n\ntype SceneSwitch = {\n\tname: string,\n\targs: any[],\n};\n\ntype Scene = {\n\tinit: (...args) => void,\n\tinitialized: boolean,\n\tevents: {\n\t\tadd: TaggedEvent[],\n\t\tupdate: TaggedEvent[],\n\t\tdraw: TaggedEvent[],\n\t\tdestroy: TaggedEvent[],\n\t\tkeyDown: KeyInputEvent[],\n\t\tkeyPress: KeyInputEvent[],\n\t\tkeyPressRep: KeyInputEvent[],\n\t\tkeyRelease: KeyInputEvent[],\n\t\tmouseClick: MouseInputEvent[],\n\t\tmouseRelease: MouseInputEvent[],\n\t\tmouseDown: MouseInputEvent[],\n\t\tcharInput: CharInputEvent[],\n\t},\n\taction: Array<() => void>,\n\trender: Array<() => void>,\n\tobjs: Map<GameObjID, GameObj>,\n\tlastObjID: GameObjID,\n\ttimers: Record<TimerID, Timer>,\n\tlastTimerID: TimerID,\n\tcam: Camera,\n\tgravity: number,\n\tlayers: Record<string, Layer>,\n\tdefLayer: string | null,\n\tdata: any,\n};\n\ntype Camera = {\n\tpos: Vec2,\n\tscale: Vec2,\n\tangle: number,\n\tshake: number,\n\tmpos: Vec2,\n\tmatrix: Mat4,\n};\n\ntype Layer = {\n\torder: number,\n\tnoCam: boolean,\n\talpha: number,\n}\n\ntype TaggedEvent = {\n\ttag: string,\n\tcb: (...args) => void,\n};\n\ntype KeyInputEvent = {\n\tkey: string,\n\tcb(): void,\n};\n\ntype MouseInputEvent = {\n\tcb(): void,\n};\n\ntype CharInputEvent = {\n\tcb: (ch: string) => void,\n};\n\nconst game: Game = {\n\tloaded: false,\n\tscenes: {},\n\tcurScene: null,\n\tnextScene: null,\n};\n\n// start describing a scene (this should be called before start())\nfunction scene(name: string, cb: (...args) => void) {\n\n\tgame.scenes[name] = {\n\n\t\tinit: cb,\n\t\tinitialized: false,\n\n\t\t// event callbacks\n\t\tevents: {\n\t\t\tadd: [],\n\t\t\tupdate: [],\n\t\t\tdraw: [],\n\t\t\tdestroy: [],\n\t\t\tkeyDown: [],\n\t\t\tkeyPress: [],\n\t\t\tkeyPressRep: [],\n\t\t\tkeyRelease: [],\n\t\t\tmouseClick: [],\n\t\t\tmouseRelease: [],\n\t\t\tmouseDown: [],\n\t\t\tcharInput: [],\n\t\t},\n\n\t\taction: [],\n\t\trender: [],\n\n\t\t// in game pool\n\t\tobjs: new Map(),\n\t\tlastObjID: 0,\n\t\ttimers: {},\n\t\tlastTimerID: 0,\n\n\t\t// cam\n\t\tcam: {\n\t\t\tpos: vec2(gfx.width() / 2, gfx.height() / 2),\n\t\t\tscale: vec2(1, 1),\n\t\t\tangle: 0,\n\t\t\tshake: 0,\n\t\t\tmpos: vec2(0),\n\t\t\tmatrix: mat4(),\n\t\t},\n\n\t\t// misc\n\t\tlayers: {},\n\t\tdefLayer: null,\n\t\tgravity: DEF_GRAVITY,\n\t\tdata: {},\n\n\t};\n\n}\n\nfunction curScene(): Scene {\n\treturn game.scenes[game.curScene];\n}\n\n// custom data kv store for scene\nfunction sceneData(): any {\n\treturn curScene().data;\n}\n\n// register inputs for controlling debug features\nfunction regDebugInputs() {\n\n\tkeyPress(\"`\", () => {\n\t\tdebug.showLog = !debug.showLog;\n\t\tlogger.info(`show log: ${debug.showLog ? \"on\" : \"off\"}`);\n\t});\n\n\tkeyPress(\"f1\", () => {\n\t\tdebug.inspect = !debug.inspect;\n\t\tlogger.info(`inspect: ${debug.inspect ? \"on\" : \"off\"}`);\n\t});\n\n\tkeyPress(\"f2\", () => {\n\t\tdebug.clearLog();\n\t});\n\n\tkeyPress(\"f8\", () => {\n\t\tdebug.paused = !debug.paused;\n\t\tlogger.info(`${debug.paused ? \"paused\" : \"unpaused\"}`);\n\t});\n\n\tkeyPress(\"f7\", () => {\n\t\tdebug.timeScale = clamp(debug.timeScale - 0.2, 0, 2);\n\t\tlogger.info(`time scale: ${debug.timeScale.toFixed(1)}`);\n\t});\n\n\tkeyPress(\"f9\", () => {\n\t\tdebug.timeScale = clamp(debug.timeScale + 0.2, 0, 2);\n\t\tlogger.info(`time scale: ${debug.timeScale.toFixed(1)}`);\n\t});\n\n\tkeyPress(\"f10\", () => {\n\t\tdebug.stepFrame();\n\t\tlogger.info(`stepped frame`);\n\t});\n\n}\n\n// schedule to switch to a scene\nfunction go(name: string, ...args) {\n\tgame.nextScene = {\n\t\tname: name,\n\t\targs: [...args],\n\t};\n}\n\nfunction goSync(name: string, ...args) {\n\treload(name);\n\tgame.curScene = name;\n\tconst scene = game.scenes[name];\n\tif (!scene) {\n\t\tthrow new Error(`scene not found: '${name}'`);\n\t}\n\tif (!scene.initialized) {\n\t\ttry {\n\t\t\tscene.init(...args);\n\t\t} catch (e) {\n\t\t\tlogger.error(e.stack);\n\t\t}\n\t\tif (gconf.debug) {\n\t\t\tregDebugInputs();\n\t\t}\n\t\tscene.initialized = true;\n\t}\n}\n\n// reload a scene, reset all objs to their init states\nfunction reload(name: string) {\n\tif (!game.scenes[name]) {\n\t\tthrow new Error(`scene not found: '${name}'`);\n\t}\n\tscene(name, game.scenes[name].init);\n}\n\nfunction layers(list: string[], def?: string) {\n\n\tconst scene = curScene();\n\n\tif (!scene) {\n\t\treturn;\n\t}\n\n\tlist.forEach((name, idx) => {\n\t\tscene.layers[name] = {\n\t\t\talpha: 1,\n\t\t\torder: idx + 1,\n\t\t\tnoCam: false,\n\t\t};\n\t});\n\n\tif (def) {\n\t\tscene.defLayer = def;\n\t}\n\n}\n\nfunction camPos(...pos): Vec2 {\n\tconst cam = curScene().cam;\n\tif (pos.length > 0) {\n\t\tcam.pos = vec2(...pos);\n\t}\n\treturn cam.pos.clone();\n}\n\nfunction camScale(...scale): Vec2 {\n\tconst cam = curScene().cam;\n\tif (scale.length > 0) {\n\t\tcam.scale = vec2(...scale);\n\t}\n\treturn cam.scale.clone();\n}\n\nfunction camRot(angle: number): number {\n\tconst cam = curScene().cam;\n\tif (angle !== undefined) {\n\t\tcam.angle = angle;\n\t}\n\treturn cam.angle;\n}\n\nfunction camShake(intensity: number) {\n\tconst cam = curScene().cam;\n\tcam.shake = intensity;\n}\n\nfunction camIgnore(layers: string[]) {\n\tconst scene = curScene();\n\tlayers.forEach((name) => {\n\t\tif (scene.layers[name]) {\n\t\t\tscene.layers[name].noCam = true;\n\t\t}\n\t})\n}\n\nfunction add(comps: Comp[]): GameObj {\n\n\tconst obj: GameObj = {\n\n\t\thidden: false,\n\t\tpaused: false,\n\t\t_tags: [],\n\t\t_id: null,\n\n\t\t_events: {\n\t\t\tadd: [],\n\t\t\tupdate: [],\n\t\t\tdraw: [],\n\t\t\tdestroy: [],\n\t\t\tinspect: [],\n\t\t},\n\n\t\t// use a comp\n\t\tuse(comp: Comp) {\n\n\t\t\tif (comp === undefined) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst type = typeof comp;\n\n\t\t\t// tags\n\t\t\tif (type === \"string\") {\n\t\t\t\tthis._tags.push(comp);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (type !== \"object\") {\n\t\t\t\tthrow new Error(`invalid comp type: ${type}`);\n\t\t\t}\n\n\t\t\t// multi comps\n\t\t\tif (Array.isArray(comp)) {\n\t\t\t\tfor (const c of comp) {\n\t\t\t\t\tthis.use(c);\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfor (const k in comp) {\n\n\t\t\t\t// event / custom method\n\t\t\t\tif (typeof comp[k] === \"function\") {\n\t\t\t\t\tif (this._events[k]) {\n\t\t\t\t\t\tthis._events[k].push(comp[k].bind(this));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis[k] = comp[k].bind(this);\n\t\t\t\t\t}\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// TODO: deal with getter / setters\n\t\t\t\t// fields\n\t\t\t\tthis[k] = comp[k];\n\n\t\t\t}\n\n\t\t},\n\n\t\t// if obj is current in scene\n\t\texists() {\n\t\t\treturn this._id !== undefined;\n\t\t},\n\n\t\t// if obj has certain tag\n\t\tis(tag) {\n\t\t\tif (tag === \"*\") {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (Array.isArray(tag)) {\n\t\t\t\tfor (const t of tag) {\n\t\t\t\t\tif (!this._tags.includes(t)) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn this._tags.includes(tag);\n\t\t},\n\n\t\ton(event, cb) {\n\t\t\tif (!this._events[event]) {\n\t\t\t\tthis._events[event] = [];\n\t\t\t}\n\t\t\tthis._events[event].push(cb);\n\t\t},\n\n\t\taction(cb) {\n\t\t\tthis.on(\"update\", cb);\n\t\t},\n\n\t\ttrigger(event, ...args) {\n\n\t\t\tif (this._events[event]) {\n\t\t\t\tfor (const f of this._events[event]) {\n\t\t\t\t\tf.call(this, ...args);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst scene = curScene();\n\t\t\tconst events = scene.events[event];\n\n\t\t\tif (events) {\n\t\t\t\tfor (const ev of events) {\n\t\t\t\t\tif (this.is(ev.tag)) {\n\t\t\t\t\t\tev.cb(this, ...args);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t},\n\n\t\trmTag(t) {\n\t\t\tconst idx = this._tags.indexOf(t);\n\t\t\tif (idx > -1) {\n\t\t\t\tthis._tags.splice(idx, 1);\n\t\t\t}\n\t\t},\n\n\t};\n\n\tobj.use(comps);\n\n\tconst scene = curScene();\n\tconst id = scene.lastObjID++;\n\n\tscene.objs.set(id, obj);\n\tobj._id = id;\n\n\tobj.trigger(\"add\");\n\n\tfor (const e of scene.events.add) {\n\t\tif (obj.is(e.tag)) {\n\t\t\te.cb(obj);\n\t\t}\n\t}\n\n\treturn obj;\n\n}\n\nfunction readd(obj: GameObj): GameObj {\n\n\tif (!obj.exists()) {\n\t\treturn;\n\t}\n\n\tconst scene = curScene();\n\n\tscene.objs.delete(obj._id);\n\tconst id = scene.lastObjID++;\n\tscene.objs.set(id, obj);\n\tobj._id = id;\n\n\treturn obj;\n\n}\n\n// add an event to a tag\nfunction on(event: string, tag: string, cb: (obj: GameObj) => void) {\n\tconst scene = curScene();\n\tif (!scene.events[event]) {\n\t\tscene.events[event] = [];\n\t}\n\tscene.events[event].push({\n\t\ttag: tag,\n\t\tcb: cb,\n\t});\n}\n\n// add update event to a tag or global update\nfunction action(tag: string | (() => void), cb?: (obj: GameObj) => void) {\n\tif (typeof tag === \"function\" && cb === undefined) {\n\t\tcurScene().action.push(tag);\n\t} else if (typeof tag === \"string\") {\n\t\ton(\"update\", tag, cb);\n\t}\n}\n\n// add draw event to a tag or global draw\nfunction render(tag: string | (() => void), cb?: (obj: GameObj) => void) {\n\tif (typeof tag === \"function\" && cb === undefined) {\n\t\tcurScene().render.push(tag);\n\t} else if (typeof tag === \"string\") {\n\t\ton(\"update\", tag, cb);\n\t}\n}\n\n// add an event that runs with objs with t1 collides with objs with t2\nfunction collides(\n\tt1: string,\n\tt2: string,\n\tf: (a: GameObj, b: GameObj) => void,\n) {\n\taction(t1, (o1) => {\n\t\to1._checkCollisions(t2, (o2) => {\n\t\t\tf(o1, o2);\n\t\t});\n\t});\n}\n\n// add an event that runs with objs with t1 overlaps with objs with t2\nfunction overlaps(\n\tt1: string,\n\tt2: string,\n\tf: (a: GameObj, b: GameObj) => void,\n) {\n\taction(t1, (o1) => {\n\t\to1._checkOverlaps(t2, (o2) => {\n\t\t\tf(o1, o2);\n\t\t});\n\t});\n}\n\n// add an event that runs when objs with tag t is clicked\nfunction clicks(t: string, f: (obj: GameObj) => void) {\n\taction(t, (o) => {\n\t\tif (o.isClicked()) {\n\t\t\tf(o);\n\t\t}\n\t});\n}\n\n// add an event that'd be run after t\nfunction wait(t: number, f?: () => void): Promise<void> {\n\treturn new Promise((resolve) => {\n\t\tconst scene = curScene();\n\t\tscene.timers[scene.lastTimerID++] = {\n\t\t\ttime: t,\n\t\t\tcb: () => {\n\t\t\t\tif (f) {\n\t\t\t\t\tf();\n\t\t\t\t}\n\t\t\t\tresolve();\n\t\t\t},\n\t\t};\n\t});\n}\n\n// add an event that's run every t seconds\nfunction loop(t: number, f: () => void): LoopHandle {\n\n\tlet stopped = false;\n\n\tconst newF = () => {\n\t\tif (stopped) {\n\t\t\treturn;\n\t\t}\n\t\tf();\n\t\twait(t, newF);\n\t};\n\n\tnewF();\n\n\treturn {\n\t\tstop() {\n\t\t\tstopped = true;\n\t\t},\n\t};\n\n}\n\nfunction pushKeyEvent(e: string, k: string, f: () => void) {\n\tif (Array.isArray(k)) {\n\t\tfor (const key of k) {\n\t\t\tpushKeyEvent(e, key, f);\n\t\t}\n\t} else {\n\t\tconst scene = curScene();\n\t\tscene.events[e].push({\n\t\t\tkey: k,\n\t\t\tcb: f,\n\t\t});\n\t}\n}\n\n// input callbacks\nfunction keyDown(k: string, f: () => void) {\n\tpushKeyEvent(\"keyDown\", k, f);\n}\n\nfunction keyPress(k: string, f: () => void) {\n\tpushKeyEvent(\"keyPress\", k, f);\n}\n\nfunction keyPressRep(k: string, f: () => void) {\n\tpushKeyEvent(\"keyPressRep\", k, f);\n}\n\nfunction keyRelease(k: string, f: () => void) {\n\tpushKeyEvent(\"keyRelease\", k, f);\n}\n\nfunction charInput(f: (ch: string) => void) {\n\tconst scene = curScene();\n\tscene.events.charInput.push({\n\t\tcb: f,\n\t});\n}\n\nfunction mouseDown(f: () => void) {\n\tconst scene = curScene();\n\tscene.events.mouseDown.push({\n\t\tcb: f,\n\t});\n}\n\nfunction mouseClick(f: () => void) {\n\tconst scene = curScene();\n\tscene.events.mouseClick.push({\n\t\tcb: f,\n\t});\n}\n\nfunction mouseRelease(f: () => void) {\n\tconst scene = curScene();\n\tscene.events.mouseRelease.push({\n\t\tcb: f,\n\t});\n}\n\n// TODO: cache sorted list\n// get all objects with tag\nfunction get(t?: string): GameObj[] {\n\n\tconst scene = curScene();\n\tconst objs = [...scene.objs.values()].sort((o1, o2) => {\n\t\tconst l1 = scene.layers[o1.layer ?? scene.defLayer]?.order ?? 0;;\n\t\tconst l2 = scene.layers[o2.layer ?? scene.defLayer]?.order ?? 0;\n\t\treturn l1 - l2;\n\t});\n\n\tif (!t) {\n\t\treturn objs;\n\t} else {\n\t\treturn objs.filter(obj => obj.is(t));\n\t}\n\n}\n\n// apply a function to all objects currently in scene with tag t\nfunction every(t: string | ((obj: GameObj) => void), f?: (obj: GameObj) => void) {\n\tif (typeof t === \"function\" && f === undefined) {\n\t\tget().forEach(t);\n\t} else if (typeof t === \"string\") {\n\t\tget(t).forEach(f);\n\t}\n}\n\n// every but in reverse order\nfunction revery(t: string | ((obj: GameObj) => void), f?: (obj: GameObj) => void) {\n\tif (typeof t === \"function\" && f === undefined) {\n\t\tget().reverse().forEach(t);\n\t} else if (typeof t === \"string\") {\n\t\tget(t).reverse().forEach(f);\n\t}\n}\n\n// destroy an obj\nfunction destroy(obj: GameObj) {\n\n\tif (!obj.exists()) {\n\t\treturn;\n\t}\n\n\tconst scene = curScene();\n\n\tif (!scene) {\n\t\treturn;\n\t}\n\n\tobj.trigger(\"destroy\");\n\tscene.objs.delete(obj._id);\n\tdelete obj._id;\n\n}\n\n// destroy all obj with the tag\nfunction destroyAll(t: string) {\n\tevery(t, (obj) => {\n\t\tdestroy(obj);\n\t});\n}\n\n// get / set gravity\nfunction gravity(g?: number): number {\n\tconst scene = curScene();\n\tif (g !== undefined) {\n\t\tscene.gravity = g;\n\t}\n\treturn scene.gravity;\n}\n\n// TODO: cleaner pause logic\nfunction gameFrame(ignorePause?: boolean) {\n\n\tconst scene = curScene();\n\n\tif (!scene) {\n\t\tthrow new Error(`scene not found: '${game.curScene}'`);\n\t}\n\n\tconst doUpdate = ignorePause || !debug.paused;\n\n\tif (doUpdate) {\n\t\t// update timers\n\t\tfor (const id in scene.timers) {\n\t\t\tconst t = scene.timers[id];\n\t\t\tt.time -= dt();\n\t\t\tif (t.time <= 0) {\n\t\t\t\tt.cb();\n\t\t\t\tdelete scene.timers[id];\n\t\t\t}\n\t\t}\n\t}\n\n\t// update every obj\n\trevery((obj) => {\n\t\tif (!obj.paused && doUpdate) {\n\t\t\tobj.trigger(\"update\");\n\t\t}\n\t});\n\n\tif (doUpdate) {\n\t\tfor (const f of scene.action) {\n\t\t\tf();\n\t\t}\n\t}\n\n\t// calculate camera matrix\n\tconst size = vec2(gfx.width(), gfx.height());\n\tconst cam = scene.cam;\n\tconst shake = vec2FromAngle(rand(0, Math.PI * 2)).scale(cam.shake);\n\n\tcam.shake = lerp(cam.shake, 0, 5 * dt());\n\tcam.matrix = mat4()\n\t\t.translate(size.scale(0.5))\n\t\t.scale(cam.scale)\n\t\t.rotateZ(cam.angle)\n\t\t.translate(size.scale(-0.5))\n\t\t.translate(cam.pos.scale(-1).add(size.scale(0.5)).add(shake))\n\t\t;\n\n\tcam.mpos = cam.matrix.invert().multVec2(app.mousePos());\n\n\t// draw every obj\n\tevery((obj) => {\n\n\t\tif (!obj.hidden) {\n\n\t\t\tgfx.pushTransform();\n\n\t\t\tif (isCamLayer(obj.layer)) {\n\t\t\t\tgfx.pushMatrix(cam.matrix);\n\t\t\t}\n\n\t\t\tobj.trigger(\"draw\");\n\t\t\tgfx.popTransform();\n\n\t\t}\n\n\t});\n\n\tfor (const f of scene.render) {\n\t\tf();\n\t}\n\n}\n\nfunction handleEvents() {\n\n\tconst scene = curScene();\n\n\tfor (const e of scene.events.charInput) {\n\t\tapp.charInputted().forEach(e.cb);\n\t}\n\n\t// run input checks & callbacks\n\tfor (const e of scene.events.keyDown) {\n\t\tif (app.keyDown(e.key)) {\n\t\t\te.cb();\n\t\t}\n\t}\n\n\tfor (const e of scene.events.keyPress) {\n\t\tif (app.keyPressed(e.key)) {\n\t\t\te.cb();\n\t\t}\n\t}\n\n\tfor (const e of scene.events.keyPressRep) {\n\t\tif (app.keyPressedRep(e.key)) {\n\t\t\te.cb();\n\t\t}\n\t}\n\n\tfor (const e of scene.events.keyRelease) {\n\t\tif (app.keyReleased(e.key)) {\n\t\t\te.cb();\n\t\t}\n\t}\n\n\tfor (const e of scene.events.mouseDown) {\n\t\tif (app.mouseDown()) {\n\t\t\te.cb();\n\t\t}\n\t}\n\n\tfor (const e of scene.events.mouseClick) {\n\t\tif (app.mouseClicked()) {\n\t\t\te.cb();\n\t\t}\n\t}\n\n\tfor (const e of scene.events.mouseRelease) {\n\t\tif (app.mouseReleased()) {\n\t\t\te.cb();\n\t\t}\n\t}\n\n}\n\nfunction drawInspect() {\n\n\tconst scene = curScene();\n\tlet inspecting = null;\n\tconst font = assets.defFont();\n\tconst lcolor = rgba(gconf.inspectColor ?? [0, 1, 1, 1]);\n\n\tfunction drawInspectTxt(pos, txt, scale) {\n\n\t\tconst pad = vec2(4).scale(1 / scale);\n\n\t\tconst ftxt = gfx.fmtText(txt, font, {\n\t\t\tsize: 12 / scale,\n\t\t\tpos: pos.add(vec2(pad.x, pad.y)),\n\t\t});\n\n\t\tgfx.drawRect(pos, ftxt.width + pad.x * 2, ftxt.height + pad.x * 2, {\n\t\t\tcolor: rgba(0, 0, 0, 1),\n\t\t});\n\n\t\tgfx.drawFmtText(ftxt);\n\n\t}\n\n\tfunction drawObj(obj, f) {\n\t\tconst isCam = isCamLayer(obj.layer);\n\t\tconst scale = gfx.scale() * (isCam ? (scene.cam.scale.x + scene.cam.scale.y) / 2 : 1);\n\t\tif (isCam) {\n\t\t\tgfx.pushTransform();\n\t\t\tgfx.pushMatrix(scene.cam.matrix);\n\t\t}\n\t\tf(scale);\n\t\tif (isCam) {\n\t\t\tgfx.popTransform();\n\t\t}\n\t}\n\n\trevery((obj) => {\n\n\t\tif (!obj.area) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (obj.hidden) {\n\t\t\treturn;\n\t\t}\n\n\t\tdrawObj(obj, (scale) => {\n\n\t\t\tif (!inspecting) {\n\t\t\t\tif (obj.isHovered()) {\n\t\t\t\t\tinspecting = obj;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst lwidth = (inspecting === obj ? 6 : 2) / scale;\n\t\t\tconst a = obj._worldArea();\n\t\t\tconst w = a.p2.x - a.p1.x;\n\t\t\tconst h = a.p2.y - a.p1.y;\n\n\t\t\tgfx.drawRectStroke(a.p1, w, h, {\n\t\t\t\twidth: lwidth,\n\t\t\t\tcolor: lcolor,\n\t\t\t});\n\n\t\t});\n\n\t});\n\n\tif (inspecting) {\n\n\t\tdrawObj(inspecting, (scale) => {\n\n\t\t\tconst mpos = mousePos(inspecting.layer);\n\t\t\tconst lines = [];\n\n\t\t\tfor (const tag of inspecting._tags) {\n\t\t\t\tlines.push(`\"${tag}\"`);\n\t\t\t}\n\n\t\t\tfor (const inspect of inspecting._events.inspect) {\n\t\t\t\tconst info = inspect();\n\t\t\t\tfor (const field in info) {\n\t\t\t\t\tlines.push(`${field}: ${info[field]}`);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tdrawInspectTxt(mpos, lines.join(\"\\n\"), scale);\n\n\t\t});\n\n\t}\n\n\tdrawInspectTxt(vec2(0), app.fps() + \"\", gfx.scale());\n\n}\n\n// start the game with a scene\nfunction start(name: string, ...args) {\n\n\tapp.run(() => {\n\n\t\tgfx.frameStart();\n\n\t\tif (!game.loaded) {\n\n\t\t\t// if assets are not fully loaded, draw a progress bar\n\t\t\tconst progress = assets.loadProgress();\n\n\t\t\tif (progress === 1) {\n\t\t\t\tgame.loaded = true;\n\t\t\t\tgoSync(name, ...args);\n\t\t\t\tif (net) {\n\t\t\t\t\tnet.connect().catch(logger.error);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst w = gfx.width() / 2;\n\t\t\t\tconst h = 24 / gfx.scale();\n\t\t\t\tconst pos = vec2(gfx.width() / 2, gfx.height() / 2).sub(vec2(w / 2, h / 2));\n\t\t\t\tgfx.drawRect(vec2(0), gfx.width(), gfx.height(), { color: rgb(0, 0, 0), });\n\t\t\t\tgfx.drawRectStroke(pos, w, h, { width: 4 / gfx.scale(), });\n\t\t\t\tgfx.drawRect(pos, w * progress, h);\n\t\t\t}\n\n\t\t} else {\n\n\t\t\ttry {\n\n\t\t\t\tif (!curScene()) {\n\t\t\t\t\tthrow new Error(`scene not found: '${game.curScene}'`);\n\t\t\t\t}\n\n\t\t\t\thandleEvents();\n\t\t\t\tgameFrame();\n\n\t\t\t\tif (debug.inspect) {\n\t\t\t\t\tdrawInspect();\n\t\t\t\t}\n\n\t\t\t} catch (e) {\n\n\t\t\t\tlogger.error(e.stack);\n\t\t\t\tapp.quit();\n\n\t\t\t}\n\n\t\t\tif (debug.showLog) {\n\t\t\t\tlogger.draw();\n\t\t\t}\n\n\t\t\tif (game.nextScene) {\n\t\t\t\tgoSync.apply(null, [ game.nextScene.name, ...game.nextScene.args, ]);\n\t\t\t\tgame.nextScene = null;\n\t\t\t}\n\n\t\t}\n\n\t\tgfx.frameEnd();\n\n\t});\n\n}\n\n// TODO: have velocity here?\nfunction pos(...args): PosComp {\n\n\treturn {\n\n\t\tpos: vec2(...args),\n\n\t\tmove(...args) {\n\n\t\t\tconst p = vec2(...args);\n\t\t\tconst dx = p.x * dt();\n\t\t\tconst dy = p.y * dt();\n\n\t\t\tthis.pos.x += dx;\n\t\t\tthis.pos.y += dy;\n\n\t\t},\n\n\t\tinspect() {\n\t\t\treturn {\n\t\t\t\tpos: `(${~~this.pos.x}, ${~~this.pos.y})`,\n\t\t\t};\n\t\t},\n\n\t};\n\n}\n\n// TODO: allow single number assignment\nfunction scale(...args): ScaleComp {\n\tif (args.length === 0) {\n\t\treturn scale(1);\n\t}\n\treturn {\n\t\tscale: vec2(...args),\n\t\tflipX(s: number) {\n\t\t\tthis.scale.x = Math.sign(s) * Math.abs(this.scale.x);\n\t\t},\n\t\tflipY(s: number) {\n\t\t\tthis.scale.y = Math.sign(s) * Math.abs(this.scale.y);\n\t\t},\n\t};\n}\n\nfunction rotate(r: number): RotateComp {\n\treturn {\n\t\tangle: r ?? 0,\n\t};\n}\n\nfunction color(...args): ColorComp {\n\treturn {\n\t\tcolor: rgba(...args),\n\t};\n}\n\nfunction origin(o: Origin | Vec2): OriginComp {\n\treturn {\n\t\torigin: o,\n\t};\n}\n\nfunction layer(l: string): LayerComp {\n\treturn {\n\t\tlayer: l,\n\t\tinspect(): LayerCompInspect {\n\t\t\tconst scene = curScene();\n\t\t\treturn {\n\t\t\t\tlayer: this.layer ?? scene.defLayer,\n\t\t\t};\n\t\t},\n\t};\n}\n\nfunction isSameLayer(o1: GameObj, o2: GameObj): boolean {\n\tconst scene = curScene();\n\treturn (o1.layer ?? scene.defLayer) === (o2.layer ?? scene.defLayer);\n}\n\n// TODO: active flag\n// TODO: tell which size collides\n// TODO: dynamic update when size change\nfunction area(p1: Vec2, p2: Vec2): AreaComp {\n\n\tconst colliding = {};\n\tconst overlapping = {};\n\n\treturn {\n\n\t\tarea: {\n\t\t\tp1: p1,\n\t\t\tp2: p2,\n\t\t},\n\n\t\tareaWidth(): number {\n\t\t\tconst { p1, p2 } = this._worldArea();\n\t\t\treturn p2.x - p1.x;\n\t\t},\n\n\t\tareaHeight(): number {\n\t\t\tconst { p1, p2 } = this._worldArea();\n\t\t\treturn p2.y - p1.y;\n\t\t},\n\n\t\tisClicked(): boolean {\n\t\t\treturn app.mouseClicked() && this.isHovered();\n\t\t},\n\n\t\tisHovered() {\n\t\t\treturn this.hasPt(mousePos(this.layer));\n\t\t},\n\n\t\tisCollided(other) {\n\n\t\t\tif (!other.area) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (!isSameLayer(this, other)) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tconst a1 = this._worldArea();\n\t\t\tconst a2 = other._worldArea();\n\n\t\t\treturn colRectRect(a1, a2);\n\n\t\t},\n\n\t\tisOverlapped(other) {\n\n\t\t\tif (!other.area) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (!isSameLayer(this, other)) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tconst a1 = this._worldArea();\n\t\t\tconst a2 = other._worldArea();\n\n\t\t\treturn overlapRectRect(a1, a2);\n\n\t\t},\n\n\t\tclicks(f: () => void) {\n\t\t\tthis.action(() => {\n\t\t\t\tif (this.isClicked()) {\n\t\t\t\t\tf();\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\n\t\thovers(f: () => void) {\n\t\t\tthis.action(() => {\n\t\t\t\tif (this.isHovered()) {\n\t\t\t\t\tf();\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\n\t\tcollides(tag: string, f: (o: GameObj) => void) {\n\t\t\tthis.action(() => {\n\t\t\t\tthis._checkCollisions(tag, f);\n\t\t\t});\n\t\t},\n\n\t\toverlaps(tag: string, f: (o: GameObj) => void) {\n\t\t\tthis.action(() => {\n\t\t\t\tthis._checkOverlaps(tag, f);\n\t\t\t});\n\t\t},\n\n\t\thasPt(pt: Vec2): boolean {\n\t\t\tconst a = this._worldArea();\n\t\t\treturn colRectPt({\n\t\t\t\tp1: a.p1,\n\t\t\t\tp2: a.p2,\n\t\t\t}, pt);\n\t\t},\n\n\t\t// TODO: make overlap events still trigger\n\t\t// push object out of other solid objects\n\t\tresolve(): CollisionResolve[] {\n\n\t\t\tconst targets: CollisionResolve[] = [];\n\n\t\t\tevery((other) => {\n\n\t\t\t\tif (other === this) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (!other.solid) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (!other.area) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (!isSameLayer(this, other)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst a1 = this._worldArea();\n\t\t\t\tconst a2 = other._worldArea();\n\n\t\t\t\tif (!colRectRect(a1, a2)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst disLeft = a1.p2.x - a2.p1.x;\n\t\t\t\tconst disRight = a2.p2.x - a1.p1.x;\n\t\t\t\tconst disTop = a1.p2.y - a2.p1.y;\n\t\t\t\tconst disBottom = a2.p2.y - a1.p1.y;\n\t\t\t\tconst min = Math.min(disLeft, disRight, disTop, disBottom);\n\n\t\t\t\tconst side = (() => {\n\t\t\t\t\tswitch (min) {\n\t\t\t\t\t\tcase disLeft:\n\t\t\t\t\t\t\tthis.pos.x -= disLeft;\n\t\t\t\t\t\t\treturn \"right\";\n\t\t\t\t\t\tcase disRight:\n\t\t\t\t\t\t\tthis.pos.x += disRight;\n\t\t\t\t\t\t\treturn \"left\";\n\t\t\t\t\t\tcase disTop:\n\t\t\t\t\t\t\tthis.pos.y -= disTop;\n\t\t\t\t\t\t\treturn \"bottom\";\n\t\t\t\t\t\tcase disBottom:\n\t\t\t\t\t\t\tthis.pos.y += disBottom;\n\t\t\t\t\t\t\treturn \"top\";\n\t\t\t\t\t}\n\t\t\t\t})();\n\n\t\t\t\ttargets.push({\n\t\t\t\t\tobj: other,\n\t\t\t\t\tside: side,\n\t\t\t\t});\n\n\t\t\t});\n\n\t\t\treturn targets;\n\n\t\t},\n\n\t\t_checkCollisions(tag: string, f: (obj: GameObj) => void) {\n\n\t\t\tevery(tag, (obj) => {\n\t\t\t\tif (this === obj) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (colliding[obj._id]) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (this.isCollided(obj)) {\n\t\t\t\t\tf(obj);\n\t\t\t\t\tcolliding[obj._id] = obj;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tfor (const id in colliding) {\n\t\t\t\tconst obj = colliding[id];\n\t\t\t\tif (!this.isCollided(obj)) {\n\t\t\t\t\tdelete colliding[id];\n\t\t\t\t}\n\t\t\t}\n\n\t\t},\n\n\t\t// TODO: repetitive with collides\n\t\t_checkOverlaps(tag: string, f: (obj: GameObj) => void) {\n\n\t\t\tevery(tag, (obj) => {\n\t\t\t\tif (this === obj) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (overlapping[obj._id]) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (this.isOverlapped(obj)) {\n\t\t\t\t\tf(obj);\n\t\t\t\t\toverlapping[obj._id] = obj;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tfor (const id in overlapping) {\n\t\t\t\tconst obj = overlapping[id];\n\t\t\t\tif (!this.isOverlapped(obj)) {\n\t\t\t\t\tdelete overlapping[id];\n\t\t\t\t}\n\t\t\t}\n\n\t\t},\n\n\t\t// TODO: cache\n\t\t// TODO: use matrix mult for more accuracy and rotation?\n\t\t_worldArea(): Rect {\n\n\t\t\tconst a = this.area;\n\t\t\tconst pos = this.pos || vec2(0);\n\t\t\tconst scale = this.scale || vec2(1);\n\t\t\tconst p1 = pos.add(a.p1.dot(scale));\n\t\t\tconst p2 = pos.add(a.p2.dot(scale));\n\n\t\t\tconst area = {\n\t\t\t\tp1: vec2(Math.min(p1.x, p2.x), Math.min(p1.y, p2.y)),\n\t\t\t\tp2: vec2(Math.max(p1.x, p2.x), Math.max(p1.y, p2.y)),\n\t\t\t};\n\n\t\t\treturn area;\n\n\t\t},\n\n\t};\n\n}\n\nfunction getAreaFromSize(w, h, o) {\n\tconst size = vec2(w, h);\n\tconst offset = originPt(o || DEF_ORIGIN).dot(size).scale(-0.5);\n\treturn area(\n\t\toffset.sub(size.scale(0.5)),\n\t\toffset.add(size.scale(0.5)),\n\t);\n}\n\nfunction sprite(id: string, conf: SpriteCompConf = {}): SpriteComp {\n\n\tlet spr = assets.sprites[id];\n\n\tif (!spr) {\n\t\tthrow new Error(`sprite not found: \"${id}\"`);\n\t}\n\n\tconst q = { ...spr.frames[0] };\n\n\tif (conf.quad) {\n\t\tq.x += conf.quad.x * q.w;\n\t\tq.y += conf.quad.y * q.h;\n\t\tq.w *= conf.quad.w;\n\t\tq.h *= conf.quad.h;\n\t}\n\n\tconst width = spr.tex.width * q.w;\n\tconst height = spr.tex.height * q.h;\n\tlet curAnim: SpriteCompCurAnim | null = null;\n\n\treturn {\n\n\t\twidth: width,\n\t\theight: height,\n\t\tanimSpeed: conf.animSpeed || 0.1,\n\t\tframe: conf.frame || 0,\n\t\tquad: conf.quad || quad(0, 0, 1, 1),\n\n\t\tadd() {\n\t\t\t// add default area\n\t\t\tif (!this.area && !conf.noArea) {\n\t\t\t\tthis.use(getAreaFromSize(this.width, this.height, this.origin));\n\t\t\t}\n\t\t},\n\n\t\tdraw() {\n\n\t\t\tconst scene = curScene();\n\t\t\tconst q = spr.frames[this.frame];\n\n\t\t\tdrawSprite(spr, {\n\t\t\t\tpos: this.pos,\n\t\t\t\tscale: this.scale,\n\t\t\t\trot: this.angle,\n\t\t\t\tcolor: this.color,\n\t\t\t\tframe: this.frame,\n\t\t\t\torigin: this.origin,\n\t\t\t\tquad: this.quad,\n\t\t\t\tprog: assets.shaders[this.shader],\n\t\t\t\tuniform: this.uniform,\n\t\t\t});\n\n\t\t},\n\n\t\tupdate() {\n\n\t\t\tif (!curAnim) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst anim = spr.anims[curAnim.name];\n\n\t\t\tcurAnim.timer += dt();\n\n\t\t\tif (curAnim.timer >= this.animSpeed) {\n\t\t\t\t// TODO: anim dir\n\t\t\t\tthis.frame++;\n\t\t\t\tif (this.frame > anim.to) {\n\t\t\t\t\tif (curAnim.loop) {\n\t\t\t\t\t\tthis.frame = anim.from;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.frame--;\n\t\t\t\t\t\tthis.stop();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (curAnim) {\n\t\t\t\t\tcurAnim.timer -= this.animSpeed;\n\t\t\t\t}\n\t\t\t}\n\n\t\t},\n\n\t\tplay(name, loop = true) {\n\n\t\t\tconst anim = spr.anims[name];\n\n\t\t\tif (!anim) {\n\t\t\t\tthrow new Error(`anim not found: ${name}`);\n\t\t\t}\n\n\t\t\tif (curAnim) {\n\t\t\t\tthis.stop();\n\t\t\t}\n\n\t\t\tcurAnim = {\n\t\t\t\tname: name,\n\t\t\t\tloop: loop,\n\t\t\t\ttimer: 0,\n\t\t\t};\n\n\t\t\tthis.frame = anim.from;\n\t\t\tthis.trigger(\"animPlay\", name);\n\n\t\t},\n\n\t\tstop() {\n\t\t\tif (!curAnim) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst prevAnim = curAnim.name;\n\t\t\tcurAnim = null;\n\t\t\tthis.trigger(\"animEnd\", prevAnim);\n\t\t},\n\n\t\tchangeSprite(id) {\n\n\t\t\tspr = assets.sprites[id];\n\n\t\t\tif (!spr) {\n\t\t\t\tthrow new Error(`sprite not found: \"${id}\"`);\n\t\t\t}\n\n\t\t\tconst q = { ...spr.frames[0] };\n\n\t\t\tif (conf.quad) {\n\t\t\t\tq.x += conf.quad.x * q.w;\n\t\t\t\tq.y += conf.quad.y * q.h;\n\t\t\t\tq.w *= conf.quad.w;\n\t\t\t\tq.h *= conf.quad.h;\n\t\t\t}\n\n\t\t\tthis.width = spr.tex.width * q.w;\n\t\t\tthis.height = spr.tex.height * q.h;\n\n\t\t\tif (this.area && !conf.noArea) {\n\t\t\t\tthis.use(getAreaFromSize(this.width, this.height, this.origin));\n\t\t\t}\n\n\t\t\tcurAnim = null;\n\t\t\tthis.frame = 0;\n\n\t\t},\n\n\t\tnumFrames() {\n\t\t\treturn spr.frames.length;\n\t\t},\n\n\t\tcurAnim() {\n\t\t\treturn curAnim?.name;\n\t\t},\n\n\t\tinspect(): SpriteCompInspect {\n\t\t\tconst info: SpriteCompInspect = {};\n\t\t\tif (curAnim) {\n\t\t\t\tinfo.curAnim = `\"${curAnim.name}\"`;\n\t\t\t}\n\t\t\treturn info;\n\t\t},\n\n\t};\n\n}\n\nfunction text(t: string, size: number, conf: TextCompConf = {}): TextComp {\n\n\treturn {\n\n\t\ttext: t,\n\t\ttextSize: size,\n\t\tfont: conf.font,\n\t\t// TODO: calc these at init\n\t\twidth: 0,\n\t\theight: 0,\n\n\t\tadd() {\n\t\t\t// add default area\n\t\t\tif (!this.area && !conf.noArea) {\n\t\t\t\tconst scene = curScene();\n\t\t\t\tconst font = assets.fonts[this.font ?? DEF_FONT];\n\t\t\t\tconst ftext = gfx.fmtText(this.text + \"\", font, {\n\t\t\t\t\tpos: this.pos,\n\t\t\t\t\tscale: this.scale,\n\t\t\t\t\trot: this.angle,\n\t\t\t\t\tsize: this.textSize,\n\t\t\t\t\torigin: this.origin,\n\t\t\t\t\tcolor: this.color,\n\t\t\t\t\twidth: conf.width,\n\t\t\t\t});\n\t\t\t\tthis.width = ftext.width / (this.scale?.x || 1);\n\t\t\t\tthis.height = ftext.height / (this.scale?.y || 1);\n\t\t\t\tthis.use(getAreaFromSize(this.width, this.height, this.origin));\n\t\t\t}\n\t\t},\n\n\t\tdraw() {\n\n\t\t\tconst scene = curScene();\n\t\t\tconst font = assets.fonts[this.font ?? DEF_FONT];\n\n\t\t\tconst ftext = gfx.fmtText(this.text + \"\", font, {\n\t\t\t\tpos: this.pos,\n\t\t\t\tscale: this.scale,\n\t\t\t\trot: this.angle,\n\t\t\t\tsize: this.textSize,\n\t\t\t\torigin: this.origin,\n\t\t\t\tcolor: this.color,\n\t\t\t\twidth: conf.width,\n\t\t\t});\n\n\t\t\tthis.width = ftext.width;\n\t\t\tthis.height = ftext.height;\n\n\t\t\tgfx.drawFmtText(ftext);\n\n\t\t},\n\n\t};\n\n}\n\nfunction rect(\n\tw: number,\n\th: number,\n\tconf: RectCompConf = {},\n): RectComp {\n\n\treturn {\n\n\t\twidth: w,\n\t\theight: h,\n\n\t\tadd() {\n\t\t\t// add default area\n\t\t\tif (!this.area && !conf.noArea) {\n\t\t\t\tthis.use(getAreaFromSize(this.width, this.height, this.origin));\n\t\t\t}\n\t\t},\n\n\t\tdraw() {\n\n\t\t\tconst scene = curScene();\n\n\t\t\tgfx.drawRect(this.pos, this.width, this.height, {\n\t\t\t\tscale: this.scale,\n\t\t\t\trot: this.angle,\n\t\t\t\tcolor: this.color,\n\t\t\t\torigin: this.origin,\n\t\t\t\tprog: assets.shaders[this.shader],\n\t\t\t\tuniform: this.uniform,\n\t\t\t});\n\n\t\t},\n\n\t};\n\n}\n\nfunction solid(): SolidComp {\n\treturn {\n\t\tsolid: true,\n\t};\n}\n\n// maximum y velocity with body()\nconst DEF_MAX_VEL = 960;\nconst DEF_JUMP_FORCE = 480;\n\nfunction body(conf: BodyCompConf = {}): BodyComp {\n\n\tlet velY = 0;\n\tlet curPlatform: GameObj | null = null;\n\tlet lastPlatformPos = null;\n\tconst maxVel = conf.maxVel ?? DEF_MAX_VEL;\n\n\treturn {\n\n\t\tjumpForce: conf.jumpForce ?? DEF_JUMP_FORCE,\n\n\t\tupdate() {\n\n\t\t\tthis.move(0, velY);\n\n\t\t\tconst targets = this.resolve();\n\t\t\tlet justOff = false;\n\n\t\t\t// check if loses current platform\n\t\t\tif (curPlatform) {\n\t\t\t\tif (!curPlatform.exists() || !this.isCollided(curPlatform)) {\n\t\t\t\t\tcurPlatform = null;\n\t\t\t\t\tlastPlatformPos = null;\n\t\t\t\t\tjustOff = true;\n\t\t\t\t} else {\n\t\t\t\t\tif (lastPlatformPos) {\n\t\t\t\t\t\t// sticky platform\n\t\t\t\t\t\tthis.pos = this.pos.add(curPlatform.pos.sub(lastPlatformPos));\n\t\t\t\t\t\tlastPlatformPos = curPlatform.pos.clone();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!curPlatform) {\n\n\t\t\t\tvelY = Math.min(velY + gravity() * dt(), maxVel);\n\n\t\t\t\t// check if grounded to a new platform\n\t\t\t\tfor (const target of targets) {\n\t\t\t\t\tif (target.side === \"bottom\" && velY > 0) {\n\t\t\t\t\t\tcurPlatform = target.obj;\n\t\t\t\t\t\tvelY = 0;\n\t\t\t\t\t\tlastPlatformPos = curPlatform.pos.clone();\n\t\t\t\t\t\tif (!justOff) {\n\t\t\t\t\t\t\tthis.trigger(\"grounded\", curPlatform);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (target.side === \"top\" && velY < 0) {\n\t\t\t\t\t\tvelY = 0;\n\t\t\t\t\t\tthis.trigger(\"headbump\", target.obj);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\tcurPlatform(): GameObj | null {\n\t\t\treturn curPlatform;\n\t\t},\n\n\t\tgrounded(): boolean {\n\t\t\treturn curPlatform !== null;\n\t\t},\n\n\t\tfalling(): boolean {\n\t\t\treturn velY > 0;\n\t\t},\n\n\t\tjump(force: number) {\n\t\t\tcurPlatform = null;\n\t\t\tvelY = -force || -this.jumpForce;\n\t\t},\n\n\t};\n\n}\n\nfunction shader(id: string, uniform: Uniform = {}): ShaderComp {\n\tconst prog = assets.shaders[id];\n\treturn {\n\t\tshader: id,\n\t\tuniform: uniform,\n\t};\n}\n\nconst debug: Debug = {\n\tpaused: false,\n\tinspect: false,\n\ttimeScale: 1,\n\tshowLog: true,\n\tfps: app.fps,\n\tobjCount(): number {\n\t\treturn curScene().objs.size;\n\t},\n\tstepFrame() {\n\t\tgameFrame(true);\n\t},\n\tdrawCalls: gfx.drawCalls,\n\tclearLog: logger.clear,\n\tlog: logger.info,\n\terror: logger.error,\n};\n\nfunction addLevel(map: string[], conf: LevelConf): Level {\n\n\tconst pool: GameObj[] = [];\n\tconst offset = vec2(conf.pos || 0);\n\tlet longRow = 0;\n\n\tconst level = {\n\n\t\tgetPos(...args): Vec2 {\n\t\t\tconst p = vec2(...args);\n\t\t\treturn vec2(\n\t\t\t\toffset.x + p.x * conf.width,\n\t\t\t\toffset.y + p.y * conf.height\n\t\t\t);\n\t\t},\n\n\t\tspawn(sym: string, p: Vec2): GameObj {\n\n\t\t\tconst comps = (() => {\n\t\t\t\tif (Array.isArray(sym)) {\n\t\t\t\t\treturn sym;\n\t\t\t\t} else if (conf[sym]) {\n\t\t\t\t\tif (typeof conf[sym] === \"function\") {\n\t\t\t\t\t\treturn conf[sym]();\n\t\t\t\t\t} else if (Array.isArray(conf[sym])) {\n\t\t\t\t\t\treturn [...conf[sym]];\n\t\t\t\t\t}\n\t\t\t\t} else if (conf.any) {\n\t\t\t\t\treturn conf.any(sym);\n\t\t\t\t}\n\t\t\t})();\n\n\t\t\tif (!comps) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tcomps.push(pos(\n\t\t\t\toffset.x + p.x * conf.width,\n\t\t\t\toffset.y + p.y * conf.height\n\t\t\t));\n\n\t\t\tconst obj = add(comps);\n\n\t\t\tpool.push(obj);\n\n\t\t\tobj.use({\n\n\t\t\t\tgridPos: p.clone(),\n\n\t\t\t\tsetGridPos(p: Vec2) {\n\t\t\t\t\tthis.gridPos = p.clone();\n\t\t\t\t\tthis.pos = vec2(\n\t\t\t\t\t\toffset.x + this.gridPos.x * conf.width,\n\t\t\t\t\t\toffset.y + this.gridPos.y * conf.height\n\t\t\t\t\t);\n\t\t\t\t},\n\n\t\t\t\tmoveLeft() {\n\t\t\t\t\tthis.setGridPos(this.gridPos.add(vec2(-1, 0)));\n\t\t\t\t},\n\n\t\t\t\tmoveRight() {\n\t\t\t\t\tthis.setGridPos(this.gridPos.add(vec2(1, 0)));\n\t\t\t\t},\n\n\t\t\t\tmoveUp() {\n\t\t\t\t\tthis.setGridPos(this.gridPos.add(vec2(0, -1)));\n\t\t\t\t},\n\n\t\t\t\tmoveDown() {\n\t\t\t\t\tthis.setGridPos(this.gridPos.add(vec2(0, 1)));\n\t\t\t\t},\n\n\t\t\t});\n\n\t\t\treturn obj;\n\n\t\t},\n\n\t\twidth() {\n\t\t\treturn longRow * conf.width;\n\t\t},\n\n\t\theight() {\n\t\t\treturn map.length * conf.height;\n\t\t},\n\n\t\tdestroy() {\n\t\t\tfor (const obj of pool) {\n\t\t\t\tdestroy(obj);\n\t\t\t}\n\t\t},\n\n\t};\n\n\tmap.forEach((row, i) => {\n\n\t\tconst syms = row.split(\"\");\n\n\t\tlongRow = Math.max(syms.length, longRow);\n\n\t\tsyms.forEach((sym, j) => {\n\t\t\tlevel.spawn(sym, vec2(j, i));\n\t\t});\n\n\t});\n\n\treturn level;\n\n}\n\nconst ctx: KaboomCtx = {\n\tstart,\n\t// asset load\n\tloadRoot: assets.loadRoot,\n\tloadSprite: assets.loadSprite,\n\tloadSound: assets.loadSound,\n\tloadFont: assets.loadFont,\n\tloadShader: assets.loadShader,\n\taddLoader: assets.addLoader,\n\t// query\n\twidth: gfx.width,\n\theight: gfx.height,\n\tdt: dt,\n\ttime: app.time,\n\tscreenshot: app.screenshot,\n\t// scene\n\tscene,\n\tgo,\n\tsceneData,\n\t// misc\n\tlayers,\n\tcamPos,\n\tcamScale,\n\tcamRot,\n\tcamShake,\n\tcamIgnore,\n\tgravity,\n\t// obj\n\tadd,\n\treadd,\n\tdestroy,\n\tdestroyAll,\n\tget,\n\tevery,\n\trevery,\n\t// net\n\tsend,\n\trecv,\n\t// comps\n\tpos,\n\tscale,\n\trotate,\n\tcolor,\n\torigin,\n\tlayer,\n\tarea,\n\tsprite,\n\ttext,\n\trect,\n\tsolid,\n\tbody,\n\tshader,\n\t// group events\n\ton,\n\taction,\n\trender,\n\tcollides,\n\toverlaps,\n\tclicks,\n\t// input\n\tkeyDown,\n\tkeyPress,\n\tkeyPressRep,\n\tkeyRelease,\n\tcharInput,\n\tmouseDown,\n\tmouseClick,\n\tmouseRelease,\n\tmousePos,\n\tcursor: app.cursor,\n\tkeyIsDown: app.keyDown,\n\tkeyIsPressed: app.keyPressed,\n\tkeyIsPressedRep: app.keyPressedRep,\n\tkeyIsReleased: app.keyReleased,\n\tmouseIsDown: app.mouseDown,\n\tmouseIsClicked: app.mouseClicked,\n\tmouseIsReleased: app.mouseReleased,\n\t// timer\n\tloop,\n\twait,\n\t// audio\n\tplay,\n\tvolume: audio.volume,\n\t// math\n\tmakeRng,\n\trand,\n\trandSeed,\n\tvec2,\n\trgb,\n\trgba,\n\tquad,\n\tchoose,\n\tchance,\n\tlerp,\n\tmap,\n\tmapc,\n\twave,\n\tdeg2rad,\n\trad2deg,\n\t// raw draw\n\tdrawSprite,\n\tdrawText,\n\tdrawRect: gfx.drawRect,\n\tdrawRectStroke: gfx.drawRectStroke,\n\tdrawLine: gfx.drawLine,\n\t// debug\n\tdebug,\n\t// level\n\taddLevel,\n};\n\nif (gconf.plugins) {\n\tfor (const src of gconf.plugins) {\n\t\tconst map = src(ctx);\n\t\tfor (const k in map) {\n\t\t\tctx[k] = map[k];\n\t\t}\n\t}\n}\n\nif (gconf.global) {\n\tfor (const k in ctx) {\n\t\twindow[k] = ctx[k];\n\t}\n}\n\nreturn ctx;\n\n};\n","import kaboom from \"../node_modules/kaboom/dist/kaboom.mjs\";\n\nexport const k = kaboom({\n\twidth: 320,\n\theight: 240,\n\tscale: 2,\n\tclearColor: [0, 0, 0, 1]\n})\n\nexport default k","import k from \"../kaboom\";\n\nfunction HelloWorld () {\n\n    let score = 0\n\n\tconst scoreText = k.add([\n\t\tk.pos(2, 2),\n\t\tk.text(`Score: ${score}`),\n\t\tk.color(1, 1, 1, 1)\t\t\n\t])\n}\n\nexport default HelloWorld;","import k from './kaboom';\nimport HelloWorld from './scenes/Game';\n\nk.scene('HelloWorld', HelloWorld);\n\nk.start('HelloWorld');","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}